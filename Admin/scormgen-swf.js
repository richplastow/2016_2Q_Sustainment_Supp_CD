//// scormgen-swf v0.0.4
//// ===================

//// Usage:
//// $ node [your path here]/Admin/scormgen-swf.js


//// Initialize variables. 
var
    fs   = require('fs')
  , path = require('path')
  // , zlib = require('zlib')
  // , gzip = zlib.createGzip()
  , courseTitle     // taken from the first line of ‘README.md’
  , courseSlug      // taken from the repo directory name
  , titles     = {} // taken from the directories in ‘../Working FLAs/’
  , swfs       = []
  , swfToTitle = {}
  , uuids      = [] // one for each swf
  , reports    = []
  , tmp = path.resolve( __dirname, 
      'scormgen-swf~tmp'+(Math.random()+'00000000').substr(2,8) )
  , timeStamp = getTimeStamp()
  , step = 0 // index in `chain`
  , chain = [] // sequential process for creating a SCORM package
  , contentUuid = generateUuid()
  , welcomePngUuid = generateUuid()
  // , parseString = require('xml2js').parseString
;


//// Initial runtime checks. 
var debug = (process.argv[2] && '--debug' == process.argv[2]);
if ('object' !== typeof process || ! process.argv) throw Error('Run in node!');
if ( 'Admin' != path.basename(__dirname) ) {
  throw Error('scormgen-swf.js must be placed in a directory named ‘Admin’');
}




//// OUTPUT-MESSAGE FUNCTIONS
function err (e) {
  if (debug) {
    console.log('step',step-1,e.stack);
    console.trace();
  } else {
    console.log('\033[31mscormgen-swf error at step '+(step-1)+':\033[1m\n  ' // bright red
      + e.message + '\033[0m');
  }
  rmrf(tmp); // recursively delete the temporary directory
}

function log () {
  var args = [].slice.call(arguments);
  args.unshift('\033[32mscormgen-swf:\033[1m\n '); // bright green
  args.push('\033[0m');
  console.log.apply(console, args);
}




//// UTILITIES
//// from https://github.com/mrDarcyMurphy/node-rmrf/blob/master/index.js
function rmrf (dirPath) {
  if (fs.existsSync(dirPath)) {
    var files = fs.readdirSync(dirPath)
    if (files && files.length > 0) {
      for (var i = 0; i < files.length; i++) {
        var filePath = path.resolve(dirPath, files[i]);
        if (fs.statSync(filePath).isFile())
          fs.unlinkSync(filePath)
        else
          rmrf(filePath)
      }
    }
    fs.rmdirSync(dirPath)
  }
}


//// from http://stackoverflow.com/a/21995878
function copyFile(source, target, cb) {
  var cbCalled = false;

  var rd = fs.createReadStream(source);
  rd.on("error", done);

  var wr = fs.createWriteStream(target);
  wr.on("error", done);
  wr.on("close", function(ex) {
    done();
  });
  rd.pipe(wr);

  function done(err) {
    if (!cbCalled) {
      cb(err);
      cbCalled = true;
    }
  }
}


//// from http://stackoverflow.com/a/21995878
function generateUuid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1)
      .toUpperCase()
    ;
  }
  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +
    s4() + '-' + s4() + s4() + s4();
}


function leftZeroPad(len, str) {
  return ( new Array(len - (str+'').length + 1) ).join('0') + str;
}


function getTimeStamp() {
  var now = new Date();
  return ([
      now.getUTCFullYear()
    , leftZeroPad( 2, now.getUTCMonth() + 1) // Jan would be `0`
    , leftZeroPad( 2, now.getUTCDate() )
    , '_'
    , leftZeroPad( 2, now.getUTCHours() )
    , leftZeroPad( 2, now.getUTCMinutes() )
    , leftZeroPad( 2, now.getUTCSeconds() )
  ]).join('');
}


//// CHAIN FUNCTIONS. 



//// Get the course slug from the top-level directory name. 
chain.push(function getCourseSlug () {
  try {

    courseSlug = path.basename( path.resolve(__dirname, '..') );
    if (! /^[_a-z0-9]+$/i.test(courseSlug) ) throw Error('‘'+courseSlug+'’ is '
      +'an invalid course slug.\n  '
      +'The course slug is taken from the name of the directory at the top-level\n  '
      +'of the repo, which should also be the name of the repo on GitHub. \n  '
      +'It can only contain letters (upper or lowercase), digits and underscores.'
    );

    //// Continue to the next step. 
    chain[step++]();

  } catch (e) { err(e); }
});



//// Get the course title from the README.md file. 
chain.push(function readCourseTitle () {
  fs.readFile( path.resolve(__dirname, '..', 'README.md'), chain[step++]);
});

chain.push(function processCourseTitle (e, result) { // args from `readFile()` in `readCourseTitle()`
  try {
    if (e && 'ENOENT' == e.code) throw Error(
      'The top-level must contain a ‘README.md’ file');
    if (e) return err(e);

    //// convert to string, replace first CR with LF, convert to array of lines. 
    result = (result+'').replace(/\r/, '\n').split('\n'); 
    var line, match, i=0;
    while ( 'string' == typeof (line = result[i++]) ) { // will be undefined after last line
      match = line.match(/^#\s+(\w[ \w]+)/);
      if (match) {
        courseTitle = match[1].trim();
        break;
      }
    }
    if (! courseTitle) throw Error('The top-level ‘README.md’ file is invalid.\n  '
      +'It must contain the course title on a line starting ‘# ’, for example:\n\n  '
      +'# 2016 2Q Sustainment - Independent Contractors - Bulk\n');

    //// Continue to the next step. 
    chain[step++]();

  } catch (e) { err(e); }
});



chain.push(function readWorkingDir () {
  fs.readdir( path.resolve(__dirname, '..', 'Working FLAs'), chain[step++]);
});

chain.push(function processWorkingDir (e, result) { // args from `readdir()` in `readWorkingDir()`
  try {
    if (e && 'ENOENT' == e.code) throw Error(
      'The ‘Admin’ directory must be placed alongside a ‘Working FLAs’ directory');
    if (e) return err(e);

    var workingDirTally = 0;
    result.forEach( function (item) {
      if ( '.' == item.substr(0,1) ) return; // ignore invisibles
      var match = item.match(/^(\d+(\.\d+)?)\.?\s+([- a-z0-9]+)$/i);
      if (! match) throw Error('‘'+item+'’ is an invalid directory name.\n  '
        +'Names of directories in ‘Working FLAs’ must begin with a number (plus\n  '
        +'optional trailing dot). Next comes a space. Next comes the title,\n  '
        +'containing letters (upper or lowercase), digits, hyphens and spaces.'
      );
      titles[ +match[1] ] = match[3];
      workingDirTally++;
    });
    if (! workingDirTally) throw Error('There are no directories in ‘Working FLAs’');

    //// Continue to the next step. 
    chain[step++]();

  } catch (e) { err(e); }
});



chain.push(function readSWFsDir () {
  fs.readdir( path.resolve(__dirname, '..', 'SWFs'), chain[step++] );
});



chain.push(function processSWFsDir (e, result) { // args from `readdir()` in `readSWFsDir()`
  try {
    if (e && 'ENOENT' == e.code) throw Error(
      'The ‘Admin’ directory must be placed alongside a ‘SWFs’ directory');
    if (e) return err(e);

    //// Fill the `swfs` and `reports` array, and error-check the swf filenames.
    var hasInterfaceSwf = hasWelcomePng = false;
    result.forEach( function (item) {
      if ( '.swf'        == item.substr(-4) )  swfs.push(item);
      if ( ' Report.txt' == item.substr(-11) ) reports.push(item);
      if ( 'interface.swf' == item) hasInterfaceSwf = true;
      if ( 'welcome.png'   == item) hasWelcomePng   = true;
    });
    if (!hasInterfaceSwf) throw Error('The special ‘interface.swf’ is missing');
    if (!hasWelcomePng)   throw Error('The special ‘welcome.png’ is missing');

    //// Make sure that every swf has a matching directory in ‘Working FLAs’. 
    swfs.forEach( function (swf) {
      var match = swf.match(/^interface\.swf$|^(\d+(\.\d+)?)_[_0-9a-z]+\.swf$/);
      if (! match) throw Error('‘'+swf+'’ is an invalid swf name.\n  '
        +'Names of swfs in ‘SWFs’ must begin with a number. Next comes an\n  '
        +'underscore. The remaining characters must be lowercase letters,\n  '
        +'digits, and underscores. The special ‘interface.swf’ file is an\n  '
        +'exception to this rule. ');
      if ('interface.swf' == swf) return;
      swfToTitle[swf] = titles[ +match[1] ];
      if (! swfToTitle[swf]) throw Error('Cannot find title for ‘'+swf+'’.\n  '
        +'Please ensure that a directory in ‘Working FLAs’ has a name which\n  '
        +'begins with the number ‘'+(+match[1])+'’. ');
    });
    if (! swfs.length) throw Error('There are no swf files in ' + __dirname);


    //// Show a quick summary. 
    log('‘' + courseTitle + '’ has '
      + swfs.length    + ' swf'    + (1==swfs.length?'':'s') + ' and '
      + reports.length + ' report' + (1==reports.length?'':'s') + '.\n  '
      + 'Generating ‘SCORM Package/' + courseSlug + '_' + timeStamp + '/’...'
    );

    //// Continue to the next step. 
    chain[step++]();

  } catch(e) { err(e); }
});



chain.push(function generateUuids () {
  swfs.forEach( function () {
    uuids.push( generateUuid() );
  });
  chain[step++]();
});



chain.push(function makeTmpDir () {
  fs.mkdir(tmp, chain[step++]);
});



chain.push(function createDir1 () {
  fs.mkdir( path.resolve(tmp, 'ICU_' + contentUuid), function (e) { if(e){return err(e)} chain[step++]() });
});



chain.push(function createDir2 () {
  fs.mkdir( path.resolve(tmp, 'ICU_' + contentUuid, 'Data'), function (e) { if(e){return err(e)} chain[step++]() });
});



chain.push(function createDir3 () {
  fs.mkdir( path.resolve(tmp, 'ICU_' + contentUuid, 'Media'), function (e) { if(e){return err(e)} chain[step++]() });
});



chain.push(function createDir4 () {
  fs.mkdir( path.resolve(tmp, 'Interfaces'), function (e) { if(e){return err(e)} chain[step++]() });
});



chain.push(function createDir5 () {
  fs.mkdir( path.resolve(tmp, 'Interfaces', 'empty_C3_interface'), function (e) { if(e){return err(e)} chain[step++]() });
});



chain.push(function createDir6 () {
  fs.mkdir( path.resolve(tmp, 'Interfaces', 'empty_C3_interface', 'Utils'), function (e) { if(e){return err(e)} chain[step++]() });
});




chain.push(function createXSD1 () {
  fs.writeFile( path.resolve(tmp, 'adlcp_rootv1p2.xsd'),
 '<?xml version="1.0"?>\r\n'
+'<!-- filename=adlcp_rootv1p2.xsd -->\r\n'
+'<!-- Conforms to w3c http://www.w3.org/TR/xmlschema-1/ 2000-10-24-->\r\n'
+'\r\n'
+'<xsd:schema xmlns="http://www.adlnet.org/xsd/adlcp_rootv1p2"\r\n'
+'            targetNamespace="http://www.adlnet.org/xsd/adlcp_rootv1p2"\r\n'
+'            xmlns:xml="http://www.w3.org/XML/1998/namespace"\r\n'
+'            xmlns:imscp="http://www.imsproject.org/xsd/imscp_rootv1p1p2"\r\n'
+'            xmlns:xsd="http://www.w3.org/2001/XMLSchema"\r\n'
+'            elementFormDefault="unqualified"\r\n'
+'            version="ADL Version 1.2">\r\n'
+'\r\n'
+'        <xsd:import namespace="http://www.imsproject.org/xsd/imscp_rootv1p1p2"\r\n'
+'         schemaLocation="imscp_rootv1p1p2.xsd"/>\r\n'
+'\r\n'
+'        <xsd:element name="location" type="locationType"/>\r\n'
+'        <xsd:element name="prerequisites" type="prerequisitesType"/>\r\n'
+'        <xsd:element name="maxtimeallowed" type="maxtimeallowedType"/>\r\n'
+'        <xsd:element name="timelimitaction" type="timelimitactionType"/>\r\n'
+'        <xsd:element name="datafromlms" type="datafromlmsType"/>\r\n'
+'        <xsd:element name="masteryscore" type="masteryscoreType"/>\r\n'
+'\r\n'
+'\r\n'
+'        <xsd:element name="schema" type="newSchemaType"/>\r\n'
+'        <xsd:simpleType name="newSchemaType">\r\n'
+'                <xsd:restriction base="imscp:schemaType">\r\n'
+'                        <xsd:enumeration value="ADL SCORM"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'        <xsd:element name="schemaversion" type="newSchemaversionType"/>\r\n'
+'        <xsd:simpleType name="newSchemaversionType">\r\n'
+'                <xsd:restriction base="imscp:schemaversionType">\r\n'
+'                        <xsd:enumeration value="1.2"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'\r\n'
+'        <xsd:attribute name="scormtype">\r\n'
+'            <xsd:simpleType>\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                   <xsd:enumeration value="asset"/>\r\n'
+'                   <xsd:enumeration value="sco"/>\r\n'
+'                </xsd:restriction>\r\n'
+'            </xsd:simpleType>\r\n'
+'        </xsd:attribute>\r\n'
+'\r\n'
+'        <xsd:simpleType name="locationType">\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                        <xsd:maxLength value="2000"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'\r\n'
+'        <xsd:complexType name="prerequisitesType">\r\n'
+'           <xsd:simpleContent>\r\n'
+'              <xsd:extension base="prerequisiteStringType">\r\n'
+'                  <xsd:attributeGroup ref="attr.prerequisitetype"/>\r\n'
+'              </xsd:extension>\r\n'
+'           </xsd:simpleContent>\r\n'
+'        </xsd:complexType>\r\n'
+'\r\n'
+'        <xsd:attributeGroup name="attr.prerequisitetype">\r\n'
+'                <xsd:attribute name="type" use="required">\r\n'
+'                        <xsd:simpleType>\r\n'
+'                                <xsd:restriction base="xsd:string">\r\n'
+'                                   <xsd:enumeration value="aicc_script"/>\r\n'
+'                                </xsd:restriction>\r\n'
+'                        </xsd:simpleType>\r\n'
+'                </xsd:attribute>\r\n'
+'        </xsd:attributeGroup>\r\n'
+'\r\n'
+'        <xsd:simpleType name="maxtimeallowedType">\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                        <xsd:maxLength value="13"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'        <xsd:simpleType name="timelimitactionType">\r\n'
+'                <xsd:restriction base="stringType">\r\n'
+'                        <xsd:enumeration value="exit,no message"/>\r\n'
+'                        <xsd:enumeration value="exit,message"/>\r\n'
+'                        <xsd:enumeration value="continue,no message"/>\r\n'
+'                        <xsd:enumeration value="continue,message"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'        <xsd:simpleType name="datafromlmsType">\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                        <xsd:maxLength value="255"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'        <xsd:simpleType name="masteryscoreType">\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                        <xsd:maxLength value="200"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'        <xsd:simpleType name="stringType">\r\n'
+'                <xsd:restriction base="xsd:string"/>\r\n'
+'        </xsd:simpleType>\r\n'
+'        \r\n'
+'        <xsd:simpleType name="prerequisiteStringType">\r\n'
+'                <xsd:restriction base="xsd:string">\r\n'
+'                   <xsd:maxLength value="200"/>\r\n'
+'                </xsd:restriction>\r\n'
+'        </xsd:simpleType>\r\n'
+'\r\n'
+'</xsd:schema>\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createXSD2 () {
  fs.writeFile( path.resolve(tmp, 'ims_xml.xsd'),
 '<?xml version="1.0" encoding="UTF-8"?>\r'
+'<!-- filename=ims_xml.xsd -->\r'
+'<xsd:schema xmlns="http://www.w3.org/XML/1998/namespace" \r'
+'            targetNamespace="http://www.w3.org/XML/1998/namespace" \r'
+'            xmlns:xsd="http://www.w3.org/2001/XMLSchema" \r'
+'            elementFormDefault="qualified">\r'
+'\t<!-- 2001-02-22 edited by Thomas Wason IMS Global Learning Consortium, Inc. -->\r'
+'\t<xsd:annotation>\r'
+'\t\t<xsd:documentation>In namespace-aware XML processors, the &quot;xml&quot; prefix is bound to the namespace name http://www.w3.org/XML/1998/namespace.</xsd:documentation>\r'
+'\t\t<xsd:documentation>Do not \'reference\' this \\file in XML instances</xsd:documentation>\r'
+'                <xsd:documentation>Schawn Thropp: \\\\Changed the uriReference type to string type</xsd:documentation>\r'
+'\t</xsd:annotation>\r'
+'\t<xsd:attribute name="lang" type="xsd:language">\r'
+'\t\t<xsd:annotation>\r'
+'\t\t\t<xsd:documentation>Refers to universal  XML 1.0 lang attribute</xsd:documentation>\r'
+'\t\t</xsd:annotation>\r'
+'\t</xsd:attribute>\r'
+'\t<xsd:attribute name="base" type="xsd:string">\r'
+'\t\t<xsd:annotation>\r'
+'\t\t\t<xsd:documentation>Refers to XML Base: http://www.w3.org/TR/xmlbase</xsd:documentation>\r'
+'\t\t</xsd:annotation>\r'
+'\t</xsd:attribute>\r'
+'\t<xsd:attribute name="link" type="xsd:string"/>\r'
+'</xsd:schema>\r'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createXSD3 () {
  fs.writeFile( path.resolve(tmp, 'imscp_rootv1p1p2.xsd'),
 '<?xml version="1.0"?>\r\n'
+'\r\n'
+'<!-- edited with XML Spy v3.5 (http://www.xmlspy.com) by Thomas Wason (private) -->\r\n'
+'<!-- filename=ims_cp_rootv1p1p2.xsd -->\r\n'
+'<!-- Copyright (2) 2001 IMS Global Learning Consortium, Inc. -->\r\n'
+'<!-- edited by Thomas Wason  -->\r\n'
+'<!-- Conforms to w3c http://www.w3.org/TR/xmlschema-1/ 2000-10-24-->\r\n'
+'\r\n'
+'<xsd:schema xmlns="http://www.imsproject.org/xsd/imscp_rootv1p1p2" \r\n'
+'            targetNamespace="http://www.imsproject.org/xsd/imscp_rootv1p1p2" \r\n'
+'            xmlns:xml="http://www.w3.org/XML/1998/namespace" \r\n'
+'            xmlns:xsd="http://www.w3.org/2001/XMLSchema" \r\n'
+'            elementFormDefault="unqualified" version="IMS CP 1.1.2">\r\n'
+'\r\n'
+'   <!-- ******************** -->\r\n'
+'   <!-- ** Change History ** -->\r\n'
+'   <!-- ******************** -->\r\n'
+'   <xsd:annotation>\r\n'
+'      <xsd:documentation xml:lang="en">DRAFT XSD for IMS Content Packaging version 1.1 DRAFT</xsd:documentation>\r\n'
+'      <xsd:documentation> Copyright (c) 2001 IMS GLC, Inc. </xsd:documentation>\r\n'
+'      <xsd:documentation>2000-04-21, Adjustments by T.D. Wason from CP 1.0.</xsd:documentation>\r\n'
+'      <xsd:documentation>2001-02-22, T.D.Wason: Modify for 2000-10-24 XML-Schema version.  Modified to support extension.</xsd:documentation>\r\n'
+'      <xsd:documentation>2001-03-12, T.D.Wason: Change filename, target and meta-data namespaces and meta-data fielname.  Add meta-data to itemType, fileType and organizationType.</xsd:documentation>\r\n'
+'      <xsd:documentation>Do not define namespaces for xml in XML instances generated from this xsd.</xsd:documentation>\r\n'
+'      <xsd:documentation>Imports IMS meta-data xsd, lower case element names.         </xsd:documentation>\r\n'
+'      <xsd:documentation>This XSD provides a reference to the IMS meta-data root element as imsmd:record</xsd:documentation>\r\n'
+'      <xsd:documentation>If the IMS meta-data is to be used in the XML instance then the instance must define an IMS meta-data prefix with a namespace.  The meta-data targetNamespace should be used.  </xsd:documentation>\r\n'
+'      <xsd:documentation>2001-03-20, Thor Anderson: Remove manifestref, change resourceref back to identifierref, change manifest back to contained by manifest. --Tom Wason: manifest may contain _none_ or more manifests.</xsd:documentation>\r\n'
+'      <xsd:documentation>2001-04-13 Tom Wason: corrected attirbute name structure.  Was misnamed type.  </xsd:documentation>\r\n'
+'      <xsd:documentation>2001-05-14 Schawn Thropp: Made all complexType extensible with the group.any</xsd:documentation>\r\n'
+'      <xsd:documentation>Added the anyAttribute to all complexTypes. Changed the href attribute on the fileType and resourceType to xsd:string</xsd:documentation>\r\n'
+'      <xsd:documentation>Changed the maxLength of the href, identifierref, parameters, structure attributes to match the Information model.</xsd:documentation>\r\n'
+'      <xsd:documentation>2001-07-25 Schawn Thropp: Changed the namespace for the Schema of Schemas to the 5/2/2001 W3C XML Schema</xsd:documentation> \r\n'
+'      <xsd:documentation>Recommendation. attributeGroup attr.imsmd deleted, was not used anywhere.  Any attribute declarations that have</xsd:documentation>\r\n'
+'      <xsd:documentation>use = "default" changed to use="optional" - attr.structure.req.</xsd:documentation>\r\n'
+'      <xsd:documentation>Any attribute declarations that have value="somevalue" changed to default="somevalue",</xsd:documentation>\r\n'
+'      <xsd:documentation>attr.structure.req (hierarchical).  Removed references to IMS MD Version 1.1.</xsd:documentation>\r\n'
+'      <xsd:documentation>Modified attribute group "attr.resourcetype.req" to change use from optional</xsd:documentation>\r\n'
+'      <xsd:documentation>to required to match the information model.  As a result the default value also needed to be removed</xsd:documentation> \r\n'
+'      <xsd:documentation>Name change for XSD.  Changed to match version of CP Spec                                           </xsd:documentation> \r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <xsd:annotation>\r\n'
+'      <xsd:documentation>Inclusions and Imports</xsd:documentation>\r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="ims_xml.xsd"/>\r\n'
+'\r\n'
+'   <xsd:annotation>\r\n'
+'      <xsd:documentation>Attribute Declarations</xsd:documentation>\r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <!-- **************************** -->\r\n'
+'   <!-- ** Attribute Declarations ** -->\r\n'
+'   <!-- **************************** -->\r\n'
+'   <xsd:attributeGroup name="attr.base">\r\n'
+'      <xsd:attribute ref="xml:base" use="optional"/>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.default">\r\n'
+'      <xsd:attribute name="default" type="xsd:IDREF" use="optional"/>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.href">\r\n'
+'      <xsd:attribute name="href" use="optional">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:anyURI">\r\n'
+'               <xsd:maxLength value="2000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.href.req">\r\n'
+'      <xsd:attribute name="href" use="required">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:anyURI">\r\n'
+'               <xsd:maxLength value="2000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup> \r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.identifier.req">\r\n'
+'      <xsd:attribute name="identifier" type="xsd:ID" use="required"/>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.identifier">\r\n'
+'      <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.isvisible">\r\n'
+'      <xsd:attribute name="isvisible" type="xsd:boolean" use="optional"/>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'   \r\n'
+'   <xsd:attributeGroup name="attr.parameters">\r\n'
+'      <xsd:attribute name="parameters" use="optional">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="1000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'   \r\n'
+'   <xsd:attributeGroup name="attr.identifierref">\r\n'
+'      <xsd:attribute name="identifierref" use="optional">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="2000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'   \r\n'
+'   <xsd:attributeGroup name="attr.identifierref.req">\r\n'
+'      <xsd:attribute name="identifierref" use="required">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="2000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'                \r\n'
+'   <xsd:attributeGroup name="attr.resourcetype.req">\r\n'
+'      <xsd:attribute name="type" use="required">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="1000"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.structure.req">\r\n'
+'      <xsd:attribute name="structure" use="optional" default="hierarchical">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="200"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.version">\r\n'
+'      <xsd:attribute name="version" use="optional">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:maxLength value="20"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:annotation>\r\n'
+'       <xsd:documentation>element groups</xsd:documentation>\r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <xsd:group name="grp.any">\r\n'
+'      <xsd:annotation>\r\n'
+'         <xsd:documentation>Any namespaced element from any namespace may be included within an &quot;any&quot; element.  The namespace for the imported element must be defined in the instance, and the schema must be imported.  </xsd:documentation>\r\n'
+'      </xsd:annotation>\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:group>\r\n'
+'\r\n'
+'   <!-- ************************** -->\r\n'
+'   <!-- ** Element Declarations ** -->\r\n'
+'   <!-- ************************** -->\r\n'
+'\r\n'
+'   <xsd:element name="dependency" type="dependencyType"/>\r\n'
+'   <xsd:element name="file" type="fileType"/>\r\n'
+'   <xsd:element name="item" type="itemType"/>\r\n'
+'   <xsd:element name="manifest" type="manifestType"/>\r\n'
+'   <xsd:element name="metadata" type="metadataType"/>\r\n'
+'   <xsd:element name="organization" type="organizationType"/>\r\n'
+'   <xsd:element name="organizations" type="organizationsType"/>\r\n'
+'   <xsd:element name="resource" type="resourceType"/>\r\n'
+'   <xsd:element name="resources" type="resourcesType"/>\r\n'
+'   <xsd:element name="schema" type="schemaType"/>\r\n'
+'   <xsd:element name="schemaversion" type="schemaversionType"/>\r\n'
+'   <xsd:element name="title" type="titleType"/>\r\n'
+'\r\n'
+'   <!-- ******************* -->\r\n'
+'   <!-- ** Complex Types ** -->\r\n'
+'   <!-- ******************* -->\r\n'
+'\r\n'
+'   <!-- **************** -->\r\n'
+'   <!-- ** dependency ** -->\r\n'
+'   <!-- **************** -->\r\n'
+'   <xsd:complexType name="dependencyType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.identifierref.req"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ********** -->\r\n'
+'   <!-- ** file ** -->\r\n'
+'   <!-- ********** -->\r\n'
+'   <xsd:complexType name="fileType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="metadata" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.href.req"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ********** -->\r\n'
+'   <!-- ** item ** -->\r\n'
+'   <!-- ********** -->\r\n'
+'   <xsd:complexType name="itemType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="title" minOccurs="0"/>\r\n'
+'         <xsd:element ref="item" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="metadata" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.identifier.req"/>\r\n'
+'      <xsd:attributeGroup ref="attr.identifierref"/>\r\n'
+'      <xsd:attributeGroup ref="attr.isvisible"/>\r\n'
+'      <xsd:attributeGroup ref="attr.parameters"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ************** -->\r\n'
+'   <!-- ** manifest ** -->\r\n'
+'   <!-- ************** -->\r\n'
+'   <xsd:complexType name="manifestType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="metadata" minOccurs="0"/>\r\n'
+'         <xsd:element ref="organizations"/>\r\n'
+'         <xsd:element ref="resources"/>\r\n'
+'         <xsd:element ref="manifest" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.identifier.req"/>\r\n'
+'      <xsd:attributeGroup ref="attr.version"/>\r\n'
+'      <xsd:attribute ref="xml:base"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ************** -->\r\n'
+'   <!-- ** metadata ** -->\r\n'
+'   <!-- ************** -->\r\n'
+'   <xsd:complexType name="metadataType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="schema" minOccurs="0"/>\r\n'
+'         <xsd:element ref="schemaversion" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ******************* -->\r\n'
+'   <!-- ** organizations ** -->\r\n'
+'   <!-- ******************* -->\r\n'
+'   <xsd:complexType name="organizationsType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="organization" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.default"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ****************** -->\r\n'
+'   <!-- ** organization ** -->\r\n'
+'   <!-- ****************** -->\r\n'
+'   <xsd:complexType name="organizationType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="title" minOccurs="0"/>\r\n'
+'         <xsd:element ref="item" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="metadata" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.identifier.req"/>\r\n'
+'      <xsd:attributeGroup ref="attr.structure.req"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- *************** -->\r\n'
+'   <!-- ** resources ** -->\r\n'
+'   <!-- *************** -->\r\n'
+'   <xsd:complexType name="resourcesType">\r\n'
+'      <xsd:sequence>\r\n'
+'          <xsd:element ref="resource" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'          <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.base"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ************** -->\r\n'
+'   <!-- ** resource ** -->\r\n'
+'   <!-- ************** -->\r\n'
+'   <xsd:complexType name="resourceType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="metadata" minOccurs="0"/>\r\n'
+'         <xsd:element ref="file" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="dependency" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'      <xsd:attributeGroup ref="attr.identifier.req"/>\r\n'
+'      <xsd:attributeGroup ref="attr.resourcetype.req"/>\r\n'
+'      <xsd:attributeGroup ref="attr.base"/>\r\n'
+'      <xsd:attributeGroup ref="attr.href"/>\r\n'
+'      <xsd:anyAttribute namespace="##other" processContents="strict"/>\r\n'
+'   </xsd:complexType>\r\n'
+'\r\n'
+'   <!-- ****************** -->\r\n'
+'   <!-- ** Simple Types ** -->\r\n'
+'   <!-- ****************** -->\r\n'
+'\r\n'
+'   <!-- ************ -->\r\n'
+'   <!-- ** schema ** -->\r\n'
+'   <!-- ************ -->\r\n'
+'   <xsd:simpleType name="schemaType">\r\n'
+'      <xsd:restriction base="xsd:string">\r\n'
+'         <xsd:maxLength value="100"/>\r\n'
+'      </xsd:restriction>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <!-- ******************* -->\r\n'
+'   <!-- ** schemaversion ** -->\r\n'
+'   <!-- ******************* -->\r\n'
+'   <xsd:simpleType name="schemaversionType">\r\n'
+'      <xsd:restriction base="xsd:string">\r\n'
+'         <xsd:maxLength value="20"/>\r\n'
+'      </xsd:restriction>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <!-- *********** -->\r\n'
+'   <!-- ** title ** -->\r\n'
+'   <!-- *********** -->\r\n'
+'   <xsd:simpleType name="titleType">\r\n'
+'      <xsd:restriction base="xsd:string">\r\n'
+'         <xsd:maxLength value="200"/>\r\n'
+'      </xsd:restriction>\r\n'
+'   </xsd:simpleType>\r\n'
+'\r\n'
+'</xsd:schema>\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createXSD4 () {
  fs.writeFile( path.resolve(tmp, 'imsmd_rootv1p2.xsd'),
 '<?xml version="1.0" encoding="UTF-8"?>\r\n'
+'<!-- edited by Thomas Wason  -->\r\n'
+'<xsd:schema targetNamespace="http://www.imsproject.org/xsd/imsmd_rootv1p2" \r\n'
+'            xmlns:xml="http://www.w3.org/XML/1998/namespace" \r\n'
+'            xmlns:xsd="http://www.w3.org/2001/XMLSchema" \r\n'
+'            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \r\n'
+'            xmlns="http://www.imsproject.org/xsd/imsmd_rootv1p2" \r\n'
+'            elementFormDefault="qualified" \r\n'
+'            version="1.2:1.1 IMS:MD1.2">\r\n'
+'\r\n'
+'   <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="ims_xml.xsd"/> \r\n'
+'\r\n'
+'   <!-- ******************** -->\r\n'
+'   <!-- ** Change History ** -->\r\n'
+'   <!-- ******************** -->\r\n'
+'   <xsd:annotation>\r\n'
+'      <xsd:documentation>2001-04-26 T.D.Wason. IMS meta-data 1.2 XML-Schema.                                  </xsd:documentation>\r\n'
+'      <xsd:documentation>2001-06-07 S.E.Thropp. Changed the multiplicity on all elements to match the         </xsd:documentation>\r\n'
+'      <xsd:documentation>Final 1.2 Binding Specification.                                                     </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed all elements that use the langstringType to a multiplicy of 1 or more        </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed centity in the contribute element to have a multiplicity of 0 or more.       </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed the requirement element to have a multiplicity of 0 or more.                 </xsd:documentation>\r\n'
+'      <xsd:documentation> 2001-07-25 Schawn Thropp.  Updates to bring the XSD up to speed with the W3C        </xsd:documentation>\r\n'
+'      <xsd:documentation> XML Schema Recommendation.  The following changes were made: Change the             </xsd:documentation>\r\n'
+'      <xsd:documentation> namespace to reference the 5/2/2001 W3C XML Schema Recommendation,the base          </xsd:documentation>\r\n'
+'      <xsd:documentation> type for the durtimeType, simpleType, was changed from timeDuration to duration.    </xsd:documentation>              \r\n'
+'      <xsd:documentation> Any attribute declarations that have use="default" had to change to use="optional"  </xsd:documentation>\r\n'
+'      <xsd:documentation> - attr.type.  Any attribute declarations that have value ="somevalue" had to change </xsd:documentation>\r\n'
+'      <xsd:documentation> to default = "somevalue" - attr.type (URI)                                          </xsd:documentation>\r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <!-- *************************** -->\r\n'
+'   <!-- ** Attribute Declaration ** -->\r\n'
+'   <!-- *************************** -->\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.type">\r\n'
+'      <xsd:attribute name="type" use="optional" default="URI">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:enumeration value="URI"/>\r\n'
+'               <xsd:enumeration value="TEXT"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:group name="grp.any">\r\n'
+'      <xsd:annotation>\r\n'
+'         <xsd:documentation>Any namespaced element from any namespace may be used for an &quot;any&quot; element.  The namespace for the imported element must be defined in the instance, and the schema must be imported.  </xsd:documentation>\r\n'
+'      </xsd:annotation>\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:group>\r\n'
+'\r\n'
+'   <!-- ************************* -->\r\n'
+'   <!-- ** Element Declaration ** -->\r\n'
+'   <!-- ************************* -->\r\n'
+'\r\n'
+'   <xsd:element name="aggregationlevel" type="aggregationlevelType"/>\r\n'
+'   <xsd:element name="annotation" type="annotationType"/>\r\n'
+'   <xsd:element name="catalogentry" type="catalogentryType"/>\r\n'
+'   <xsd:element name="catalog" type="catalogType"/>\r\n'
+'   <xsd:element name="centity" type="centityType"/>\r\n'
+'   <xsd:element name="classification" type="classificationType"/>\r\n'
+'   <xsd:element name="context" type="contextType"/>\r\n'
+'   <xsd:element name="contribute" type="contributeType"/>\r\n'
+'   <xsd:element name="copyrightandotherrestrictions" type="copyrightandotherrestrictionsType"/>\r\n'
+'   <xsd:element name="cost" type="costType"/>\r\n'
+'   <xsd:element name="coverage" type="coverageType"/>\r\n'
+'   <xsd:element name="date" type="dateType"/>\r\n'
+'   <xsd:element name="datetime" type="datetimeType"/>\r\n'
+'   <xsd:element name="description" type="descriptionType"/>\r\n'
+'   <xsd:element name="difficulty" type="difficultyType"/>\r\n'
+'   <xsd:element name="educational" type="educationalType"/>\r\n'
+'   <xsd:element name="entry" type="entryType"/>\r\n'
+'   <xsd:element name="format" type="formatType"/>\r\n'
+'   <xsd:element name="general" type="generalType"/>\r\n'
+'   <xsd:element name="identifier" type="xsd:string"/>\r\n'
+'   <xsd:element name="intendedenduserrole" type="intendedenduserroleType"/>\r\n'
+'   <xsd:element name="interactivitylevel" type="interactivitylevelType"/>\r\n'
+'   <xsd:element name="interactivitytype" type="interactivitytypeType"/>\r\n'
+'   <xsd:element name="keyword" type="keywordType"/>\r\n'
+'   <xsd:element name="kind" type="kindType"/>\r\n'
+'   <xsd:element name="langstring" type="langstringType"/>\r\n'
+'   <xsd:element name="language" type="xsd:string"/>\r\n'
+'   <xsd:element name="learningresourcetype" type="learningresourcetypeType"/>\r\n'
+'   <xsd:element name="lifecycle" type="lifecycleType"/>\r\n'
+'   <xsd:element name="location" type="locationType"/>\r\n'
+'   <xsd:element name="lom" type="lomType"/>\r\n'
+'   <xsd:element name="maximumversion" type="minimumversionType"/>\r\n'
+'   <xsd:element name="metadatascheme" type="metadataschemeType"/>\r\n'
+'   <xsd:element name="metametadata" type="metametadataType"/>\r\n'
+'   <xsd:element name="minimumversion" type="maximumversionType"/>\r\n'
+'   <xsd:element name="name" type="nameType"/>\r\n'
+'   <xsd:element name="purpose" type="purposeType"/>\r\n'
+'   <xsd:element name="relation" type="relationType"/>\r\n'
+'   <xsd:element name="requirement" type="requirementType"/>\r\n'
+'   <xsd:element name="resource" type="resourceType"/>\r\n'
+'   <xsd:element name="rights" type="rightsType"/>\r\n'
+'   <xsd:element name="role" type="roleType"/>\r\n'
+'   <xsd:element name="semanticdensity" type="semanticdensityType"/>\r\n'
+'   <xsd:element name="size" type="sizeType"/>\r\n'
+'   <xsd:element name="source" type="sourceType"/>\r\n'
+'   <xsd:element name="status" type="statusType"/>\r\n'
+'   <xsd:element name="structure" type="structureType"/>\r\n'
+'   <xsd:element name="taxon" type="taxonType"/>\r\n'
+'   <xsd:element name="taxonpath" type="taxonpathType"/>\r\n'
+'   <xsd:element name="technical" type="technicalType"/>\r\n'
+'   <xsd:element name="title" type="titleType"/>\r\n'
+'   <xsd:element name="type" type="typeType"/>\r\n'
+'   <xsd:element name="typicalagerange" type="typicalagerangeType"/>\r\n'
+'   <xsd:element name="typicallearningtime" type="typicallearningtimeType"/>\r\n'
+'   <xsd:element name="value" type="valueType"/>\r\n'
+'   <xsd:element name="person" type="personType"/>\r\n'
+'   <xsd:element name="vcard" type="xsd:string"/>\r\n'
+'   <xsd:element name="version" type="versionType"/>\r\n'
+'   <xsd:element name="installationremarks" type="installationremarksType"/>\r\n'
+'   <xsd:element name="otherplatformrequirements" type="otherplatformrequirementsType"/>\r\n'
+'   <xsd:element name="duration" type="durationType"/>\r\n'
+'   <xsd:element name="id" type="idType"/>\r\n'
+'\r\n'
+'   <!-- ******************* -->\r\n'
+'   <!-- ** Complex Types ** -->\r\n'
+'   <!-- ******************* -->\r\n'
+'\r\n'
+'   <xsd:complexType name="aggregationlevelType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="annotationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="person" minOccurs="0"/>\r\n'
+'         <xsd:element ref="date" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="catalogentryType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="catalog"/>\r\n'
+'         <xsd:element ref="entry"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="centityType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="vcard"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="classificationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="purpose" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxonpath" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="keyword" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="contextType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="contributeType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="role"/>\r\n'
+'         <xsd:element ref="centity" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="date" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="copyrightandotherrestrictionsType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="costType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="coverageType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="dateType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="descriptionType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="difficultyType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="durationType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="educationalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="interactivitytype" minOccurs="0"/>\r\n'
+'         <xsd:element ref="learningresourcetype" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="interactivitylevel" minOccurs="0"/>\r\n'
+'         <xsd:element ref="semanticdensity" minOccurs="0"/>\r\n'
+'         <xsd:element ref="intendedenduserrole" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="context" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="typicalagerange" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="difficulty" minOccurs="0"/>\r\n'
+'         <xsd:element ref="typicallearningtime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="entryType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="generalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="title" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="keyword" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="coverage" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="structure" minOccurs="0"/>\r\n'
+'         <xsd:element ref="aggregationlevel" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="installationremarksType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="intendedenduserroleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="interactivitylevelType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="interactivitytypeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="keywordType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="kindType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="langstringType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attribute ref="xml:lang"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="learningresourcetypeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="lifecycleType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="version" minOccurs="0"/>\r\n'
+'         <xsd:element ref="status" minOccurs="0"/>\r\n'
+'         <xsd:element ref="contribute" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="locationType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attributeGroup ref="attr.type"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="lomType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="general" minOccurs="0"/>\r\n'
+'         <xsd:element ref="lifecycle" minOccurs="0"/>\r\n'
+'         <xsd:element ref="metametadata" minOccurs="0"/>\r\n'
+'         <xsd:element ref="technical" minOccurs="0"/>\r\n'
+'         <xsd:element ref="educational" minOccurs="0"/>\r\n'
+'         <xsd:element ref="rights" minOccurs="0"/>\r\n'
+'         <xsd:element ref="relation" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="annotation" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="classification" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="metametadataType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="contribute" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="metadatascheme" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="nameType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="otherplatformrequirementsType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="personType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="vcard"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="purposeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="relationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="kind" minOccurs="0"/>\r\n'
+'         <xsd:element ref="resource" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="requirementType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="type" minOccurs="0"/>\r\n'
+'         <xsd:element ref="name" minOccurs="0"/>\r\n'
+'         <xsd:element ref="minimumversion" minOccurs="0"/>\r\n'
+'         <xsd:element ref="maximumversion" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="resourceType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="rightsType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="cost" minOccurs="0"/>\r\n'
+'         <xsd:element ref="copyrightandotherrestrictions" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="roleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="semanticdensityType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="sourceType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="statusType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="stringType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attribute ref="xml:lang"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="structureType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="taxonpathType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxon" minOccurs="0" maxOccurs="1"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="taxonType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="id" minOccurs="0"/>\r\n'
+'         <xsd:element ref="entry" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxon" minOccurs="0" maxOccurs="1"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="technicalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="format" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="size" minOccurs="0"/>\r\n'
+'         <xsd:element ref="location" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="requirement" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="installationremarks" minOccurs="0"/>\r\n'
+'         <xsd:element ref="otherplatformrequirements" minOccurs="0"/>\r\n'
+'         <xsd:element ref="duration" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="titleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typicalagerangeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typicallearningtimeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="valueType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="versionType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ****************** -->\r\n'
+'   <!-- ** Simple Types ** -->\r\n'
+'   <!-- ****************** -->\r\n'
+'   \r\n'
+'   <xsd:simpleType name="formatType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="sizeType">\r\n'
+'      <xsd:restriction base="xsd:int"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="datetimeType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="idType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="metadataschemeType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="catalogType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="minimumversionType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="maximumversionType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'\r\n'
+'</xsd:schema>\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createXSD5 () {
  fs.writeFile( path.resolve(tmp, 'imsmd_rootv1p2p1.xsd'),
 '<?xml version="1.0" encoding="UTF-8"?>\r\n'
+'<!-- edited by Thomas Wason  -->\r\n'
+'<xsd:schema targetNamespace="http://www.imsglobal.org/xsd/imsmd_rootv1p2p1" \r\n'
+'            xmlns:xml="http://www.w3.org/XML/1998/namespace" \r\n'
+'            xmlns:xsd="http://www.w3.org/2001/XMLSchema" \r\n'
+'            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \r\n'
+'            xmlns="http://www.imsglobal.org/xsd/imsmd_rootv1p2p1" \r\n'
+'            elementFormDefault="qualified" \r\n'
+'            version="1.2:1.1 IMS:MD1.2">\r\n'
+'\r\n'
+'   <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="ims_xml.xsd"/> \r\n'
+'\r\n'
+'   <!-- ******************** -->\r\n'
+'   <!-- ** Change History ** -->\r\n'
+'   <!-- ******************** -->\r\n'
+'   <xsd:annotation>\r\n'
+'      <xsd:documentation>2001-04-26 T.D.Wason. IMS meta-data 1.2 XML-Schema.                                  </xsd:documentation>\r\n'
+'      <xsd:documentation>2001-06-07 S.E.Thropp. Changed the multiplicity on all elements to match the         </xsd:documentation>\r\n'
+'      <xsd:documentation>Final 1.2 Binding Specification.                                                     </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed all elements that use the langstringType to a multiplicy of 1 or more        </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed centity in the contribute element to have a multiplicity of 0 or more.       </xsd:documentation>\r\n'
+'      <xsd:documentation>Changed the requirement element to have a multiplicity of 0 or more.                 </xsd:documentation>\r\n'
+'      <xsd:documentation> 2001-07-25 Schawn Thropp.  Updates to bring the XSD up to speed with the W3C        </xsd:documentation>\r\n'
+'      <xsd:documentation> XML Schema Recommendation.  The following changes were made: Change the             </xsd:documentation>\r\n'
+'      <xsd:documentation> namespace to reference the 5/2/2001 W3C XML Schema Recommendation,the base          </xsd:documentation>\r\n'
+'      <xsd:documentation> type for the durtimeType, simpleType, was changed from timeDuration to duration.    </xsd:documentation>              \r\n'
+'      <xsd:documentation> Any attribute declarations that have use="default" had to change to use="optional"  </xsd:documentation>\r\n'
+'      <xsd:documentation> - attr.type.  Any attribute declarations that have value ="somevalue" had to change </xsd:documentation>\r\n'
+'      <xsd:documentation> to default = "somevalue" - attr.type (URI)                                          </xsd:documentation>\r\n'
+'      <xsd:documentation> 2001-09-04 Schawn Thropp                                                            </xsd:documentation>\r\n'
+'      <xsd:documentation> Changed the targetNamespace and namespace of schema to reflect version change       </xsd:documentation>\r\n'
+'   </xsd:annotation>\r\n'
+'\r\n'
+'   <!-- *************************** -->\r\n'
+'   <!-- ** Attribute Declaration ** -->\r\n'
+'   <!-- *************************** -->\r\n'
+'\r\n'
+'   <xsd:attributeGroup name="attr.type">\r\n'
+'      <xsd:attribute name="type" use="optional" default="URI">\r\n'
+'         <xsd:simpleType>\r\n'
+'            <xsd:restriction base="xsd:string">\r\n'
+'               <xsd:enumeration value="URI"/>\r\n'
+'               <xsd:enumeration value="TEXT"/>\r\n'
+'            </xsd:restriction>\r\n'
+'         </xsd:simpleType>\r\n'
+'      </xsd:attribute>\r\n'
+'   </xsd:attributeGroup>\r\n'
+'\r\n'
+'   <xsd:group name="grp.any">\r\n'
+'      <xsd:annotation>\r\n'
+'         <xsd:documentation>Any namespaced element from any namespace may be used for an &quot;any&quot; element.  The namespace for the imported element must be defined in the instance, and the schema must be imported.  </xsd:documentation>\r\n'
+'      </xsd:annotation>\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:any namespace="##any" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:group>\r\n'
+'\r\n'
+'   <!-- ************************* -->\r\n'
+'   <!-- ** Element Declaration ** -->\r\n'
+'   <!-- ************************* -->\r\n'
+'\r\n'
+'   <xsd:element name="aggregationlevel" type="aggregationlevelType"/>\r\n'
+'   <xsd:element name="annotation" type="annotationType"/>\r\n'
+'   <xsd:element name="catalogentry" type="catalogentryType"/>\r\n'
+'   <xsd:element name="catalog" type="catalogType"/>\r\n'
+'   <xsd:element name="centity" type="centityType"/>\r\n'
+'   <xsd:element name="classification" type="classificationType"/>\r\n'
+'   <xsd:element name="context" type="contextType"/>\r\n'
+'   <xsd:element name="contribute" type="contributeType"/>\r\n'
+'   <xsd:element name="copyrightandotherrestrictions" type="copyrightandotherrestrictionsType"/>\r\n'
+'   <xsd:element name="cost" type="costType"/>\r\n'
+'   <xsd:element name="coverage" type="coverageType"/>\r\n'
+'   <xsd:element name="date" type="dateType"/>\r\n'
+'   <xsd:element name="datetime" type="datetimeType"/>\r\n'
+'   <xsd:element name="description" type="descriptionType"/>\r\n'
+'   <xsd:element name="difficulty" type="difficultyType"/>\r\n'
+'   <xsd:element name="educational" type="educationalType"/>\r\n'
+'   <xsd:element name="entry" type="entryType"/>\r\n'
+'   <xsd:element name="format" type="formatType"/>\r\n'
+'   <xsd:element name="general" type="generalType"/>\r\n'
+'   <xsd:element name="identifier" type="xsd:string"/>\r\n'
+'   <xsd:element name="intendedenduserrole" type="intendedenduserroleType"/>\r\n'
+'   <xsd:element name="interactivitylevel" type="interactivitylevelType"/>\r\n'
+'   <xsd:element name="interactivitytype" type="interactivitytypeType"/>\r\n'
+'   <xsd:element name="keyword" type="keywordType"/>\r\n'
+'   <xsd:element name="kind" type="kindType"/>\r\n'
+'   <xsd:element name="langstring" type="langstringType"/>\r\n'
+'   <xsd:element name="language" type="xsd:string"/>\r\n'
+'   <xsd:element name="learningresourcetype" type="learningresourcetypeType"/>\r\n'
+'   <xsd:element name="lifecycle" type="lifecycleType"/>\r\n'
+'   <xsd:element name="location" type="locationType"/>\r\n'
+'   <xsd:element name="lom" type="lomType"/>\r\n'
+'   <xsd:element name="maximumversion" type="minimumversionType"/>\r\n'
+'   <xsd:element name="metadatascheme" type="metadataschemeType"/>\r\n'
+'   <xsd:element name="metametadata" type="metametadataType"/>\r\n'
+'   <xsd:element name="minimumversion" type="maximumversionType"/>\r\n'
+'   <xsd:element name="name" type="nameType"/>\r\n'
+'   <xsd:element name="purpose" type="purposeType"/>\r\n'
+'   <xsd:element name="relation" type="relationType"/>\r\n'
+'   <xsd:element name="requirement" type="requirementType"/>\r\n'
+'   <xsd:element name="resource" type="resourceType"/>\r\n'
+'   <xsd:element name="rights" type="rightsType"/>\r\n'
+'   <xsd:element name="role" type="roleType"/>\r\n'
+'   <xsd:element name="semanticdensity" type="semanticdensityType"/>\r\n'
+'   <xsd:element name="size" type="sizeType"/>\r\n'
+'   <xsd:element name="source" type="sourceType"/>\r\n'
+'   <xsd:element name="status" type="statusType"/>\r\n'
+'   <xsd:element name="structure" type="structureType"/>\r\n'
+'   <xsd:element name="taxon" type="taxonType"/>\r\n'
+'   <xsd:element name="taxonpath" type="taxonpathType"/>\r\n'
+'   <xsd:element name="technical" type="technicalType"/>\r\n'
+'   <xsd:element name="title" type="titleType"/>\r\n'
+'   <xsd:element name="type" type="typeType"/>\r\n'
+'   <xsd:element name="typicalagerange" type="typicalagerangeType"/>\r\n'
+'   <xsd:element name="typicallearningtime" type="typicallearningtimeType"/>\r\n'
+'   <xsd:element name="value" type="valueType"/>\r\n'
+'   <xsd:element name="person" type="personType"/>\r\n'
+'   <xsd:element name="vcard" type="xsd:string"/>\r\n'
+'   <xsd:element name="version" type="versionType"/>\r\n'
+'   <xsd:element name="installationremarks" type="installationremarksType"/>\r\n'
+'   <xsd:element name="otherplatformrequirements" type="otherplatformrequirementsType"/>\r\n'
+'   <xsd:element name="duration" type="durationType"/>\r\n'
+'   <xsd:element name="id" type="idType"/>\r\n'
+'\r\n'
+'   <!-- ******************* -->\r\n'
+'   <!-- ** Complex Types ** -->\r\n'
+'   <!-- ******************* -->\r\n'
+'\r\n'
+'   <xsd:complexType name="aggregationlevelType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="annotationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="person" minOccurs="0"/>\r\n'
+'         <xsd:element ref="date" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="catalogentryType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="catalog"/>\r\n'
+'         <xsd:element ref="entry"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="centityType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="vcard"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="classificationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="purpose" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxonpath" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="keyword" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="contextType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="contributeType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="role"/>\r\n'
+'         <xsd:element ref="centity" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="date" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="copyrightandotherrestrictionsType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="costType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="coverageType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="dateType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="descriptionType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="difficultyType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="durationType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="educationalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="interactivitytype" minOccurs="0"/>\r\n'
+'         <xsd:element ref="learningresourcetype" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="interactivitylevel" minOccurs="0"/>\r\n'
+'         <xsd:element ref="semanticdensity" minOccurs="0"/>\r\n'
+'         <xsd:element ref="intendedenduserrole" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="context" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="typicalagerange" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="difficulty" minOccurs="0"/>\r\n'
+'         <xsd:element ref="typicallearningtime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="entryType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="generalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="title" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="keyword" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="coverage" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="structure" minOccurs="0"/>\r\n'
+'         <xsd:element ref="aggregationlevel" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="installationremarksType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="intendedenduserroleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="interactivitylevelType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="interactivitytypeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="keywordType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="kindType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="langstringType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attribute ref="xml:lang"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="learningresourcetypeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="lifecycleType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="version" minOccurs="0"/>\r\n'
+'         <xsd:element ref="status" minOccurs="0"/>\r\n'
+'         <xsd:element ref="contribute" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="locationType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attributeGroup ref="attr.type"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="lomType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="general" minOccurs="0"/>\r\n'
+'         <xsd:element ref="lifecycle" minOccurs="0"/>\r\n'
+'         <xsd:element ref="metametadata" minOccurs="0"/>\r\n'
+'         <xsd:element ref="technical" minOccurs="0"/>\r\n'
+'         <xsd:element ref="educational" minOccurs="0"/>\r\n'
+'         <xsd:element ref="rights" minOccurs="0"/>\r\n'
+'         <xsd:element ref="relation" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="annotation" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="classification" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="metametadataType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="contribute" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="metadatascheme" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="language" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="nameType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="otherplatformrequirementsType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="personType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="vcard"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="purposeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="relationType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="kind" minOccurs="0"/>\r\n'
+'         <xsd:element ref="resource" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="requirementType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="type" minOccurs="0"/>\r\n'
+'         <xsd:element ref="name" minOccurs="0"/>\r\n'
+'         <xsd:element ref="minimumversion" minOccurs="0"/>\r\n'
+'         <xsd:element ref="maximumversion" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="resourceType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="identifier" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:element ref="catalogentry" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="rightsType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="cost" minOccurs="0"/>\r\n'
+'         <xsd:element ref="copyrightandotherrestrictions" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="roleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="semanticdensityType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="sourceType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="statusType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="stringType">\r\n'
+'      <xsd:simpleContent>\r\n'
+'         <xsd:extension base="xsd:string">\r\n'
+'            <xsd:attribute ref="xml:lang"/>\r\n'
+'         </xsd:extension>\r\n'
+'      </xsd:simpleContent>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="structureType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="taxonpathType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxon" minOccurs="0" maxOccurs="1"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="taxonType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="id" minOccurs="0"/>\r\n'
+'         <xsd:element ref="entry" minOccurs="0"/>\r\n'
+'         <xsd:element ref="taxon" minOccurs="0" maxOccurs="1"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="technicalType" mixed="true">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="format" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="size" minOccurs="0"/>\r\n'
+'         <xsd:element ref="location" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="requirement" minOccurs="0" maxOccurs="unbounded"/>\r\n'
+'         <xsd:element ref="installationremarks" minOccurs="0"/>\r\n'
+'         <xsd:element ref="otherplatformrequirements" minOccurs="0"/>\r\n'
+'         <xsd:element ref="duration" minOccurs="0"/>\r\n'
+'         <xsd:group ref="grp.any"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="titleType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="source"/>\r\n'
+'         <xsd:element ref="value"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typicalagerangeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="typicallearningtimeType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="datetime" minOccurs="0"/>\r\n'
+'         <xsd:element ref="description" minOccurs="0"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="valueType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <xsd:complexType name="versionType">\r\n'
+'      <xsd:sequence>\r\n'
+'         <xsd:element ref="langstring" minOccurs="1" maxOccurs="unbounded"/>\r\n'
+'      </xsd:sequence>\r\n'
+'   </xsd:complexType>\r\n'
+'   \r\n'
+'   <!-- ****************** -->\r\n'
+'   <!-- ** Simple Types ** -->\r\n'
+'   <!-- ****************** -->\r\n'
+'   \r\n'
+'   <xsd:simpleType name="formatType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="sizeType">\r\n'
+'      <xsd:restriction base="xsd:int"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="datetimeType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="idType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="metadataschemeType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="catalogType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="minimumversionType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'   \r\n'
+'   <xsd:simpleType name="maximumversionType">\r\n'
+'      <xsd:restriction base="xsd:string"/>\r\n'
+'   </xsd:simpleType>\r\n'
+'\r\n'
+'</xsd:schema>\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});




chain.push(function createJS1 () {
  fs.writeFile( path.resolve(tmp, 'ICU_' + contentUuid, 'Media', 'All_Functions_1_2.js'),
 '/* This if for SCORM 1.2, adapted from SCORM 2004 2nd Ed., BUT not everything has been tested! */\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** FileName: APIWrapper.js\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Concurrent Technologies Corporation (CTC) grants you ("Licensee") a non-\r\n'
+'** exclusive, royalty free, license to use, modify and redistribute this\r\n'
+'** software in source and binary code form, provided that i) this copyright\r\n'
+'** notice and license appear on all copies of the software; and ii) Licensee does\r\n'
+'** not utilize the software in a manner which is disparaging to CTC.\r\n'
+'**\r\n'
+'** This software is provided "AS IS," without a warranty of any kind.  ALL\r\n'
+'** EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY\r\n'
+'** IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NON-\r\n'
+'** INFRINGEMENT, ARE HEREBY EXCLUDED.  CTC AND ITS LICENSORS SHALL NOT BE LIABLE\r\n'
+'** FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR\r\n'
+'** DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES.  IN NO EVENT WILL CTC  OR ITS\r\n'
+'** LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,\r\n'
+'** INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER\r\n'
+'** CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF\r\n'
+'** OR INABILITY TO USE SOFTWARE, EVEN IF CTC  HAS BEEN ADVISED OF THE POSSIBILITY\r\n'
+'** OF SUCH DAMAGES.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'** This file is part of the ADL Sample API Implementation intended to provide\r\n'
+'** an elementary example of the concepts presented in the ADL Sharable\r\n'
+'** Content Object Reference Model (SCORM).\r\n'
+'**\r\n'
+'** The purpose in wrapping the calls to the API is to (1) provide a\r\n'
+'** consistent means of finding the LMS API implementation within the window\r\n'
+'** hierarchy and (2) to validate that the data being exchanged via the\r\n'
+'** API conforms to the defined CMI data types.\r\n'
+'**\r\n'
+'** This is just one possible example for implementing the API guidelines for\r\n'
+'** runtime communication between an LMS and executable content components.\r\n'
+'** There are several other possible implementations.\r\n'
+'**\r\n'
+'** Usage: Executable course content can call the API Wrapper\r\n'
+'**      functions as follows:\r\n'
+'**\r\n'
+'**    javascript:\r\n'
+'**          var result = doInitialize();\r\n'
+'**          if (result != true) \r\n'
+'**          {\r\n'
+'**             // handle error\r\n'
+'**          }\r\n'
+'**\r\n'
+'**    authorware:\r\n'
+'**          result := ReadURL("javascript:doInitialize()", 100)\r\n'
+'**\r\n'
+'**    director:\r\n'
+'**          result = externalEvent("javascript:doInitialize()")\r\n'
+'**\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'var _Debug = false;  // set this to false to turn debugging off\r\n'
+'                     // and get rid of those annoying alert boxes.\r\n'
+'\r\n'
+'// Define exception/error codes\r\n'
+'var _NoError = 0;\r\n'
+'var _GeneralException = 101;\r\n'
+'var _GeneralInitializationFailure = 102;\r\n'
+'var _AlreadyInitialized = 103;\r\n'
+'var _ContentInstanceTerminated = 104;\r\n'
+'var _GeneralTerminationFailure = 111;\r\n'
+'var _TerminationBeforeInitialization = 112;\r\n'
+'var _TerminationAfterTermination = 113;\r\n'
+'var _ReceivedDataBeforeInitialization = 122;\r\n'
+'var _ReceivedDataAfterTermination = 123;\r\n'
+'var _StoreDataBeforeInitialization = 132;\r\n'
+'var _StoreDataAfterTermination = 133;\r\n'
+'var _CommitBeforeInitialization = 142;\r\n'
+'var _CommitAfterTermination = 143;\r\n'
+'var _GeneralArgumentError = 201;\r\n'
+'var _GeneralGetFailure = 301;\r\n'
+'var _GeneralSetFailure = 351;\r\n'
+'var _GeneralCommitFailure = 391;\r\n'
+'var _UndefinedDataModelElement = 401;\r\n'
+'var _UnimplementedDataModelElement = 402;\r\n'
+'var _DataModelElementValueNotInitialized = 403;\r\n'
+'var _DataModelElementIsReadOnly = 404;\r\n'
+'var _DataModelElementIsWriteOnly = 405;\r\n'
+'var _DataModelElementTypeMismatch = 406;\r\n'
+'var _DataModelElementValueOutOfRange = 407;\r\n'
+'\r\n'
+'\r\n'
+'// local variable definitions\r\n'
+'var apiHandle = null;\r\n'
+'var API = null;\r\n'
+'var findAPITries = 0;\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function: doInitialize()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  CMIBoolean true if the initialization was successful, or\r\n'
+'**          CMIBoolean false if the initialization failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Initialize communication with LMS by calling the Initialize\r\n'
+'** function which will be implemented by the LMS.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doInitialize()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nInitialize was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'\r\n'
+'   var result = api.LMSInitialize("");\r\n'
+'\r\n'
+'   if (result.toString() != "true")\r\n'
+'   {\r\n'
+'      var err = ErrorHandler();\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doTerminate()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  CMIBoolean true if successful\r\n'
+'**          CMIBoolean false if failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Close communication with LMS by calling the Terminate\r\n'
+'** function which will be implemented by the LMS\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doTerminate()\r\n'
+'{  \r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nTerminate was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      // call the Terminate function that should be implemented by the API\r\n'
+'\r\n'
+'      var result = api.LMSFinish("");\r\n'
+'      if (result.toString() != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetValue(name)\r\n'
+'** Inputs:  name - string representing the cmi data model defined category or\r\n'
+'**             element (e.g. cmi.core.student_id)\r\n'
+'** Return:  The value presently assigned by the LMS to the cmi data model\r\n'
+'**       element defined by the element or category identified by the name\r\n'
+'**       input value.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Wraps the call to the GetValue method\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetValue(name)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetValue was not successful.");\r\n'
+'      return "";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var value = api.LMSGetValue(name);\r\n'
+'      var errCode = api.LMSGetLastError().toString();\r\n'
+'      if (errCode != _NoError)\r\n'
+'      {\r\n'
+'         // an error was encountered so display the error description\r\n'
+'         var errDescription = api.LMSGetErrorString(errCode);\r\n'
+'         alert("GetValue("+name+") failed. \\n"+ errDescription);\r\n'
+'         return "";\r\n'
+'      }\r\n'
+'      else\r\n'
+'      {\r\n'
+'         \r\n'
+'         return value.toString();\r\n'
+'      }\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doSetValue(name, value)\r\n'
+'** Inputs:  name -string representing the data model defined category or element\r\n'
+'**          value -the value that the named element or category will be assigned\r\n'
+'** Return:  CMIBoolean true if successful\r\n'
+'**          CMIBoolean false if failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Wraps the call to the SetValue function\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doSetValue(name, value)\r\n'
+'{  \r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nSetValue was not successful.");\r\n'
+'      return;\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var result = api.LMSSetValue(name, value);\r\n'
+'      if (result.toString() != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'   }\r\n'
+'\r\n'
+'   return;\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doCommit()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  None\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the Commit function \r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doCommit()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nCommit was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var result = api.LMSCommit("");\r\n'
+'      if (result != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetLastError()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  The error code that was set by the last LMS function call\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the GetLastError function \r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetLastError()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetLastError was not successful.");\r\n'
+'      //since we can\'t get the error code from the LMS, return a general error\r\n'
+'      return _GeneralError;\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetLastError().toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetErrorString(errorCode)\r\n'
+'** Inputs:  errorCode - Error Code\r\n'
+'** Return:  The textual description that corresponds to the input error code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the GetErrorString function \r\n'
+'**\r\n'
+'********************************************************************************/\r\n'
+'function doGetErrorString(errorCode)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetErrorString was not successful.");\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetErrorString(errorCode).toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetDiagnostic(errorCode)\r\n'
+'** Inputs:  errorCode - Error Code(integer format), or null\r\n'
+'** Return:  The vendor specific textual description that corresponds to the \r\n'
+'**          input error code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the LMSGetDiagnostic function\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetDiagnostic(errorCode)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetDiagnostic was not successful.");\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetDiagnostic(errorCode).toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function ErrorHandler()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  The current value of the LMS Error Code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Determines if an error was encountered by the previous API call\r\n'
+'** and if so, displays a message to the user.  If the error code\r\n'
+'** has associated text it is also displayed.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function ErrorHandler()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nCannot determine LMS error code.");\r\n'
+'      return;\r\n'
+'   }\r\n'
+'\r\n'
+'   // check for errors caused by or from the LMS\r\n'
+'   var errCode = api.LMSGetLastError().toString();\r\n'
+'   if (errCode != _NoError && errCode != _AlreadyInitialized )\r\n'
+'   {\r\n'
+'      // an error was encountered so display the error description\r\n'
+'      var errDescription = api.LMSGetErrorString(errCode);\r\n'
+'\r\n'
+'      if (_Debug == true)\r\n'
+'      {\r\n'
+'         errDescription += "\\n";\r\n'
+'         errDescription += api.LMSGetDiagnostic(null);\r\n'
+'         // by passing null to GetDiagnostic, we get any available diagnostics\r\n'
+'         // on the previous error.\r\n'
+'      }\r\n'
+'\r\n'
+'      alert(errDescription);\r\n'
+'   }\r\n'
+'\r\n'
+'   return errCode;\r\n'
+'}\r\n'
+'\r\n'
+'/******************************************************************************\r\n'
+'**\r\n'
+'** Function getAPIHandle()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  value contained by APIHandle\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Returns the handle to API object if it was previously set,\r\n'
+'** otherwise it returns null\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function getAPIHandle()\r\n'
+'{\r\n'
+'   if (apiHandle == null)\r\n'
+'   {\r\n'
+'      apiHandle = getAPI();\r\n'
+'   }\r\n'
+'\r\n'
+'   return apiHandle;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function findAPI(win)\r\n'
+'** Inputs:  win - a Window Object\r\n'
+'** Return:  If an API object is found, it\'s returned, otherwise null is returned\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** This function looks for an object named API in parent and opener windows\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function findAPI(win)\r\n'
+'{\r\n'
+'   while ((win.API == null) && (win.parent != null) && (win.parent != win))\r\n'
+'   {\r\n'
+'      findAPITries++;\r\n'
+'      \r\n'
+'      if (findAPITries > 500) \r\n'
+'      {\r\n'
+'         alert("Error finding API -- too deeply nested.");\r\n'
+'         return null;\r\n'
+'      }\r\n'
+'      \r\n'
+'      win = win.parent;\r\n'
+'\r\n'
+'   }\r\n'
+'   return win.API;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function getAPI()\r\n'
+'** Inputs:  none\r\n'
+'** Return:  If an API object is found, it\'s returned, otherwise null is returned\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** This function looks for an object named API, first in the current window\'s \r\n'
+'** frame hierarchy and then, if necessary, in the current window\'s opener window\r\n'
+'** hierarchy (if there is an opener window).\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function getAPI()\r\n'
+'{\r\n'
+'   var theAPI = findAPI(window);\r\n'
+'   if ((theAPI == null) && (window.opener != null) && (typeof(window.opener) != "undefined"))\r\n'
+'   {\r\n'
+'      theAPI = findAPI(window.opener);\r\n'
+'   }\r\n'
+'   if (theAPI == null)\r\n'
+'   {\r\n'
+'      alert("Unable to find an API adapter");\r\n'
+'   }\r\n'
+'   return theAPI\r\n'
+'}\r\n'
+'\r\n'
+'/* This if for SCORM 1.2, adapted from SCORM 2004 2nd Ed., BUT not everything has been tested! */\r\n'
+'\r\n'
+'var traceSCORM_API = false;\r\n'
+'\r\n'
+'var APP_NAME = \'C3 SCORM Runtime\';\r\n'
+'\r\n'
+'var SCO_LMS_Version;\r\n'
+'var SCO_LMS_Status;\r\n'
+'var SCO_ExitPageStatus;\r\n'
+'\r\n'
+'var SCO_StartTimestamp;\r\n'
+'var SCO_EndTimestamp;\r\n'
+'\r\n'
+'var SCO_STATUS_UNKNOWN       = \'unknown\';\r\n'
+'var SCO_STATUS_NOT_ATTEMPTED = \'not attempted\';\r\n'
+'var SCO_STATUS_INCOMPLETE    = \'incomplete\';\r\n'
+'var SCO_STATUS_COMPLETED     = \'completed\';\r\n'
+'\r\n'
+'var SCO_LessonStatus         = SCO_STATUS_NOT_ATTEMPTED;\r\n'
+'\r\n'
+'var CMI_LOCATION          = \'cmi.core.lesson_location\';\r\n'
+'var CMI_SESSION_TIME      = \'cmi.core.session_time\';\r\n'
+'var CMI_VERSION           = \'cmi._version\';\r\n'
+'var CMI_COMPLETION_STATUS = \'cmi.core.lesson_status\';\r\n'
+'\r\n'
+'var CMI_SCORE             = \'cmi.core.score.raw\';  // -1 <= s <= 1\r\n'
+'var CMI_PASSING_SCORE     = \'cmi.scaled_passing\';  // -1 <= s <= 1\r\n'
+'\r\n'
+'var CMI_SUCCESS_STATUS         = CMI_COMPLETION_STATUS; //1.2 has no Success Status\r\n'
+'var CMI_SUCCESS_STATUS_PASSED  = \'passed\';\r\n'
+'var CMI_SUCCESS_STATUS_FAILED  = \'failed\';\r\n'
+'var CMI_SUCCESS_STATUS_UNKNOWN = \'incomplete\';\r\n'
+'\r\n'
+'var CMI_INTERACTIONS_ID               = \'cmi.interactions.n.id\';\r\n'
+'var CMI_INTERACTIONS_TYPE             = \'cmi.interactions.n.type\';\r\n'
+'var CMI_INTERACTIONS_TYPE_TF          = \'true-false\';\r\n'
+'var CMI_INTERACTIONS_TYPE_CHOICE      = \'choice\';\r\n'
+'var CMI_INTERACTIONS_TYPE_MATCHING    = \'matching\';\r\n'
+'var CMI_INTERACTIONS_CORRECT          = \'cmi.interactions.n.correct_responses.0.pattern\';\r\n'
+'var CMI_INTERACTIONS_RESPONSE         = \'cmi.interactions.n.student_response\';\r\n'
+'var CMI_INTERACTIONS_RESULT           = \'cmi.interactions.n.result\';\r\n'
+'var CMI_INTERACTIONS_RESULT_CORRECT   = \'correct\';\r\n'
+'var CMI_INTERACTIONS_RESULT_INCORRECT = \'wrong\';\r\n'
+'var CMI_INTERACTIONS_WEIGHTING        = \'cmi.interactions.n.weighting\'; \r\n'
+'\r\n'
+'var CMI_EXIT                          = \'cmi.core.exit\';\r\n'
+'var CMI_EXIT_NORMAL                   = \'normal\';\r\n'
+'var CMI_EXIT_SUSPEND                  = \'suspend\';\r\n'
+'var CMI_EXIT_TIMEOUT                  = \'time-out\';\r\n'
+'var CMI_EXIT_LOGOUT                   = \'logout\';\r\n'
+'var CMI_EXIT_UNDETERMINED             = \'\';\r\n'
+'var CMI_SUSPEND_DATA                  = \'cmi.suspend_data\'; \r\n'
+'\r\n'
+'var ADL_NAV_REQUEST             = \'adl.nav.request\';\r\n'
+'\r\n'
+'var SCO_NAV_REQUEST_CONTINUE    = \'continue\';\r\n'
+'var SCO_NAV_REQUEST_PREVIOUS    = \'previous\';\r\n'
+'var SCO_NAV_REQUEST_CHOICE      = \'choice\';\r\n'
+'var SCO_NAV_REQUEST_EXIT        = \'exit\';\r\n'
+'var SCO_NAV_REQUEST_EXIT_ALL    = \'exitAll\';\r\n'
+'var SCO_NAV_REQUEST_ABANDON     = \'abandon\';\r\n'
+'var SCO_NAV_REQUEST_ABANDON_ALL = \'abandonAll\';\r\n'
+'var SCO_NAV_REQUEST_NONE        = \'_none_\';\r\n'
+'\r\n'
+'var ADL_NAV_REQUEST_VALID_PREVIOUS = \'adl.nav.request_valid.previous\';\r\n'
+'var ADL_NAV_REQUEST_VALID_CONTINUE = \'adl.nav.request_valid.continue\';\r\n'
+'\r\n'
+'\r\n'
+'function QTypeToCMI_INTERACTION_TYPE( type )\r\n'
+'{\r\n'
+'   switch (type.toUpperCase())\r\n'
+'   {\r\n'
+'      case \'TRUE_FALSE\':             type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MULTIPLE_CHOICE\':        type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MULTI_MULTIPLE_CHOICE\':  type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MATCHING\':               type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'      case \'ORDERING\':               type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'      case \'DRAG_AND_DROP\':          type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'\r\n'
+'      default:                       type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'   }\r\n'
+'\r\n'
+'   return type;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function ConvertToCMI_INTERACTION_TYPE( type, pattern )\r\n'
+'{\r\n'
+'   pattern = pattern.replace(/^\\s+|\\s+$/g, \'\');\r\n'
+'\r\n'
+'   switch ( type )\r\n'
+'   {\r\n'
+'      case CMI_INTERACTIONS_TYPE_CHOICE:\r\n'
+'         return pattern; break;\r\n'
+'\r\n'
+'      case CMI_INTERACTIONS_TYPE_MATCHING:\r\n'
+'\r\n'
+'         var p = pattern.split(\',\');\r\n'
+'\r\n'
+'         for (var i = 0; i < p.length; i++)\r\n'
+'            p[i] = (i + 1) + \'.\' + p[i];\r\n'
+'\r\n'
+'         return p.join(\',\');\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function ConvertFromCMI_INTERACTION_TYPE( type, pattern )\r\n'
+'{\r\n'
+'   switch ( type )\r\n'
+'   {\r\n'
+'      case CMI_INTERACTIONS_TYPE_CHOICE:\r\n'
+'         return pattern.split(\',\').join(\' \'); break;\r\n'
+'\r\n'
+'      case CMI_INTERACTIONS_TYPE_MATCHING:\r\n'
+'         var p = pattern.split(\',\');\r\n'
+'\r\n'
+'         for (var i = 0; i < p.length; i++)\r\n'
+'            p[i] = p[i].split(\'.\')[1];\r\n'
+'\r\n'
+'         return pattern.join(\' \');\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_GetInteractionResponse( n, id, type )\r\n'
+'{\r\n'
+'   InitializeNonexistantInteractions(n);\r\n'
+'   \r\n'
+'   type = QTypeToCMI_INTERACTION_TYPE( type );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + n + \'.\'),   id );\r\n'
+'   doSetValue( CMI_INTERACTIONS_TYPE.replace(\'.n.\', \'.\' + n + \'.\'), type );\r\n'
+'\r\n'
+'   var value = doGetValue( ConvertFromCMI_INTERACTION_TYPE( type, CMI_INTERACTIONS_RESPONSE.replace(\'.n.\', \'.\' + n + \'.\') ) );\r\n'
+'\r\n'
+'   //alert(\'SCO_GetInteractionResponse: \' + value + \'\\n\\nvalue: \' + typeof(value));\r\n'
+'\r\n'
+'   return value;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetInteraction( n, id, type, correctPattern, currentPattern, score , passingScore)\r\n'
+'{\r\n'
+'   /*\r\n'
+'   alert(\r\n'
+'      \'SCO_SetInteraction:\\n\\n\' +\r\n'
+'      \'interation number n = \' + n + \'\\n\\n\' +\r\n'
+'      \'id = \' + id + \'\\n\\n\' +\r\n'
+'      \'type = \' + type + \'\\n\\n\' +\r\n'
+'      \'correctPattern = \' + correctPattern + \'\\n\\n\' +\r\n'
+'      \'currentPattern = \' + currentPattern + \'\\n\\n\' +\r\n'
+'      \'score = \' + score + \'\\n\\n\' +\r\n'
+'      \'passingScore = \' + passingScore\r\n'
+'   );\r\n'
+'   */\r\n'
+'\r\n'
+'   InitializeNonexistantInteractions(n);\r\n'
+'\r\n'
+'   type = QTypeToCMI_INTERACTION_TYPE( type );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + n + \'.\'),   id );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_TYPE.replace(\'.n.\', \'.\' + n + \'.\'), type );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_CORRECT.replace(\'.n.\', \'.\' + n + \'.\'),  ConvertToCMI_INTERACTION_TYPE( type, correctPattern ) );\r\n'
+'   doSetValue( CMI_INTERACTIONS_RESPONSE.replace(\'.n.\', \'.\' + n + \'.\'), ConvertToCMI_INTERACTION_TYPE( type, currentPattern ) );\r\n'
+'\r\n'
+'   var result = CMI_INTERACTIONS_RESULT_INCORRECT;\r\n'
+'\r\n'
+'   if ( correctPattern == currentPattern )\r\n'
+'      result = CMI_INTERACTIONS_RESULT_CORRECT;\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_RESULT.replace(\'.n.\', \'.\' + n + \'.\'), result );\r\n'
+'\r\n'
+'   doSetValue( CMI_SCORE,         (score        / 100 ).toPrecision(3) );\r\n'
+'\r\n'
+'   /*\r\n'
+'   doSetValue( CMI_PASSING_SCORE, (passingScore / 100 ).toPrecision(3) );\r\n'
+'\r\n'
+'   if ( doGetValue( CMI_PASSING_SCORE ) == \'\' )\r\n'
+'   {\r\n'
+'      if ( score >= passingScore )\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_PASSED );\r\n'
+'      else\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_FAILED );\r\n'
+'\r\n'
+'   }\r\n'
+'   */\r\n'
+'\r\n'
+'   if ( passingScore != undefined && passingScore != \'\' )\r\n'
+'   {\r\n'
+'      if ( score >= passingScore )\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_PASSED );\r\n'
+'      else\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_FAILED );\r\n'
+'\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function InitializeNonexistantInteractions(n)\r\n'
+'{\r\n'
+'   try\r\n'
+'   {\r\n'
+'        var count = doGetValue( CMI_INTERACTIONS_ID.replace(\'.n.id\', \'._count\'));\r\n'
+'        var top   = n + 1;\r\n'
+'\r\n'
+'        for (var i = count; i < top; i++)\r\n'
+'        {\r\n'
+'            doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + i + \'.\'),   \'INIT\' + i );\r\n'
+'        }\r\n'
+'   }\r\n'
+'   catch (e) {}\r\n'
+'}\r\n'
+' \r\n'
+'\r\n'
+'function SCO_LoadICU()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_LoadICU()\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        SCO_StartTimestamp = new Date();\r\n'
+' \r\n'
+'        SCO_LMS_Status = doInitialize();\r\n'
+'\r\n'
+'        //Not used, and the Meridian/MCALMS does not implement the CMI_VERSION, so this caues an error.\r\n'
+'        //if (SCO_LMS_Status == "true")\r\n'
+'        //   SCO_LMS_Version = doGetValue( CMI_VERSION );\r\n'
+'\t\t\r\n'
+'\t\tSCO_SetStatusLatched(SCO_STATUS_INCOMPLETE, true );\t\t\r\n'
+'        doSetValue( CMI_EXIT, CMI_EXIT_SUSPEND );\r\n'
+'\t\t\r\n'
+'    }\r\n'
+'    catch(e)\r\n'
+'    {\r\n'
+'        alert( APP_NAME + \' SCO_LoadPage() Problem: \' + e.message );\r\n'
+'    }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_ExitICU(manual) \r\n'
+'{\r\n'
+'    manual = (manual == undefined ? false : manual);\r\n'
+'\t/*\r\n'
+'    if (lessonUnloaded == true)\r\n'
+'       return;\r\n'
+'  \r\n'
+'\r\n'
+'    var unfinished = ShowGradeDialog(manual);\r\n'
+'\r\n'
+'    if ( unfinished != \'\' && manual == true)\r\n'
+'    {\r\n'
+'       loadFrame( unfinished);\r\n'
+'       return;\r\n'
+'    }\r\n'
+'\t*/ \r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_ExitICU()\');\r\n'
+'\r\n'
+'    SCO_EndTimestamp = new Date();\r\n'
+'\r\n'
+'    var n;\r\n'
+'  \r\n'
+'    if (SCO_LMS_Status =="true") \r\n'
+'    {\r\n'
+'        if (SCO_ExitPageStatus != true) \r\n'
+'        {\t\t\t\r\n'
+'            try\r\n'
+'            {\r\n'
+'                SCO_ExitPageStatus = true;\r\n'
+'\r\n'
+'                doSetValue( CMI_SESSION_TIME, \r\n'
+'                            SCO_CalcElapstedTime1_2( SCO_StartTimestamp, SCO_EndTimestamp ) );\r\n'
+'                doSetValue( CMI_EXIT, CMI_EXIT_SUSPEND );\r\n'
+'                doCommit();\r\n'
+'            }\r\n'
+'            catch(e)\r\n'
+'            {\r\n'
+'                alert( APP_NAME + \' SCO_ExitPage() Problem: \' + e.message );\r\n'
+'            }\r\n'
+'            finally\r\n'
+'            {\r\n'
+'                doTerminate();\r\n'
+'            }\r\n'
+'        }\r\n'
+'    }\t\r\n'
+'\r\n'
+'    try { RuntimeStopAllMultimedia( argExitFrame=true ) } catch (e) {}\r\n'
+'\r\n'
+'\r\n'
+'    // If we\'re not running in an LMS, then we\'ll close the courseware window!\r\n'
+'\r\n'
+'    //if (SCO_LMS_Status =="false")\t\r\n'
+'        window.close();\r\n'
+'\r\n'
+'\r\n'
+'    lessonUnloaded = true;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_LoadFrame( frameBookmarkId, bHiddenFrame )\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_LoadFrame("\' + frameBookmarkId + \'")\');\r\n'
+'\r\n'
+'    bHiddenFrame = (bHiddenFrame == undefined) ? false : bHiddenFrame;\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        doSetValue( CMI_LOCATION, frameBookmarkId );\r\n'
+'\r\n'
+'        if (bHiddenFrame == false)\r\n'
+'           doCommit();\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_ExitFrame()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_ExitFrame()\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_GetBookmarkLocation()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_GetBookmarkLocation()\');\r\n'
+'\r\n'
+'    var location = \'\';\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        location = doGetValue( CMI_LOCATION );\r\n'
+'\r\n'
+'        if ( doGetLastError() == _DataModelElementValueNotInitialized )\r\n'
+'            location = \'\';\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'\r\n'
+'    return location;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_NotAttempted( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_NOT_ATTEMPTED, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_Incomplete( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_INCOMPLETE, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_Completed( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_COMPLETED, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_PreviousSCOAvailable()\r\n'
+'{\r\n'
+'    var value = doGetValue( ADL_NAV_REQUEST_VALID_PREVIOUS).toLowerCase();\r\n'
+'\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_PreviousSCOAvailable() \' + value);\r\n'
+'\r\n'
+'    return (value == \'true\');\r\n'
+'}\r\n'
+'\r\n'
+'function SCO_NextSCOAvailable()\r\n'
+'{\r\n'
+'    var value = doGetValue( ADL_NAV_REQUEST_VALID_CONTINUE).toLowerCase();\r\n'
+'\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_NextSCOAvailable() \' + value);\r\n'
+'\r\n'
+'    return (value == \'true\');\r\n'
+'}\r\n'
+'\r\n'
+'function SCO_SetNavigation( navCommand )\r\n'
+'{\r\n'
+'    //Not used in SCORM 1.2\r\n'
+'    //navCommand = (navCommand == undefined) ? SCO_NAV_REQUEST_NONE : navCommand;\r\n'
+'\r\n'
+'    //doSetValue( ADL_NAV_REQUEST, navCommand );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_LoadSuspendData()\r\n'
+'{\r\n'
+'   //return \'0_1|1_0\'; //for testing\r\n'
+'   return doGetValue( CMI_SUSPEND_DATA );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SaveSuspendData( data )\r\n'
+'{\r\n'
+'   //alert(\'SuspendData\\n\\n\' + data);\r\n'
+'   doSetValue( CMI_EXIT,         CMI_EXIT_SUSPEND );\r\n'
+'   doSetValue( CMI_SUSPEND_DATA, data );\r\n'
+'   doCommit();\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'////////////// Supporting Routines ///////////////\r\n'
+'\r\n'
+'\r\n'
+'// Returns elapsted time in SCORM "timeinterval" form:\r\n'
+'//\r\n'
+'//  P[yY][mM][dD][T[hH][mM][s[.s]S]]\r\n'
+'//\r\n'
+'//  where:\r\n'
+'//\r\n'
+'//  • y: The number of years   (integer, >= 0, not restricted)\r\n'
+'//  • m: The number of months  (integer, >= 0, not restricted)\r\n'
+'//  • d: The number of days    (integer, >= 0, not restricted)\r\n'
+'//  • h: The number of hours   (integer, >= 0, not restricted)\r\n'
+'//  • n: The number of minutes (integer, >= 0, not restricted)\r\n'
+'//  • s: The number of seconds or fraction of seconds \r\n'
+'//       (real or integer, >= 0, not restricted). If fractions \r\n'
+'//       of a second are used, SCORM further restricts the string \r\n'
+'//       to a maximum of 2 digits (e.g., 34.45 – valid, \r\n'
+'//       34.45454545 – not valid).\r\n'
+'//\r\n'
+'//  • The character literals designators “P”,”Y”,”M”,”D”,”T”,”H”,\r\n'
+'//    ”M”,”S” shall appear if the corresponding non-zero value is \r\n'
+'//    present.\r\n'
+'//\r\n'
+'//  Example:\r\n'
+'//\r\n'
+'//  • P1Y3M2DT3H indicates a period of time of 1 year, 3 months, \r\n'
+'//    2 days and 3 hours\r\n'
+'//  • PT3H5M indicates a period of time of 3 hours and 5 minutes\r\n'
+'\r\n'
+'\r\n'
+'function SCO_CalcElapstedTime( startTimestamp, endTimestamp )\r\n'
+'{\r\n'
+'   var diff = Math.floor( (( endTimestamp) - startTimestamp ) / 1000);\r\n'
+'\r\n'
+'    var years  = 0;\r\n'
+'    var months = 0;\r\n'
+'    var days   = 0;\r\n'
+'\r\n'
+'    var csecs  = Math.floor(((endTimestamp - startTimestamp) % 1000) / 10);\r\n'
+'    var secs   = Math.floor( diff % 60);\r\n'
+'    var mins   = Math.floor( diff / 60) % 60;\r\n'
+'    var hours  = Math.floor( diff / 3600);\r\n'
+'\r\n'
+'    return \'P\' + \r\n'
+'           years  + \'Y\' +\r\n'
+'           months + \'M\' +\r\n'
+'           days   + \'D\' +\r\n'
+'           \'T\' +\r\n'
+'           hours  + \'H\' +\r\n'
+'           mins   + \'M\' +\r\n'
+'           secs   + \'.\' + (\'00\'+csecs  ).replace(/.*?(\\d{2})$/,\'\\$1\') + \'S\';\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_CalcElapstedTime1_2( startTimestamp, endTimestamp )\r\n'
+'{\r\n'
+'   var diff = Math.floor( (( endTimestamp) - startTimestamp ) / 1000);\r\n'
+'\r\n'
+'    var years  = 0;\r\n'
+'    var months = 0;\r\n'
+'    var days   = 0;\r\n'
+'\r\n'
+'    var csecs  = Math.floor(((endTimestamp - startTimestamp) % 1000) / 10);\r\n'
+'    var secs   = Math.floor( diff % 60);\r\n'
+'    var mins   = Math.floor( diff / 60) % 60;\r\n'
+'    var hours  = Math.floor( diff / 3600);\r\n'
+'\r\n'
+'    return (\'0000\' + (hours+0)).replace(/.*?(\\d{4,4})$/, \'\\$1\') + \':\' +\r\n'
+'           (\'00\'   + (mins +0)).replace(/.*?(\\d{2,2})$/, \'\\$1\') + \':\' +\r\n'
+'           (\'00\'   + (secs +0)).replace(/.*?(\\d{2,2})$/, \'\\$1\') + \'.\' +\r\n'
+'           (\'00\'   + (csecs+0)).replace(/.*?(\\d{2,2})$/, \'\\$1\');\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatusLatched( status, latch )\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_SetStatusLatched("\' + status + \'")\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        latch = (latch != undefined) ? latch : false;\r\n'
+'\r\n'
+'        if ( latch )\r\n'
+'        {\r\n'
+'            var currentStatus = doGetValue( CMI_COMPLETION_STATUS );\r\n'
+'\r\n'
+'            if ( currentStatus == SCO_STATUS_UNKNOWN )\r\n'
+'                currentStatus = SCO_STATUS_NOT_ATTEMPTED;\r\n'
+'\r\n'
+'\r\n'
+'            if ( currentStatus == SCO_STATUS_NOT_ATTEMPTED )\r\n'
+'            {\r\n'
+'                if ( status == SCO_STATUS_INCOMPLETE ||\r\n'
+'                     status == SCO_STATUS_COMPLETED)\r\n'
+'                {\r\n'
+'                    doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'                    doCommit();\r\n'
+'                }\r\n'
+'            }\r\n'
+'            else\r\n'
+'            if ( currentStatus == SCO_STATUS_INCOMPLETE )\r\n'
+'            {\r\n'
+'                if ( status == SCO_STATUS_COMPLETED )\r\n'
+'                {\r\n'
+'                    doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'                    doCommit();\r\n'
+'                }\r\n'
+'            }\r\n'
+'            else\r\n'
+'            if ( currentStatus == SCO_STATUS_COMPLETED )\r\n'
+'            {\r\n'
+'                // Do nothing...\r\n'
+'            }\r\n'
+'        }\r\n'
+'        else\r\n'
+'        {\r\n'
+'            doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'            doCommit();\r\n'
+'        }\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});




chain.push(function createJS2 () {
  fs.writeFile( path.resolve(tmp, 'Interfaces', 'empty_C3_interface', 'interface.js'),
  '' // empty file
  , function (e) { if(e){return err(e)} chain[step++]() });

});




chain.push(function createJS3 () {
  fs.writeFile( path.resolve(tmp, 'Interfaces', 'empty_C3_interface', 'Utils', 'APIWrapper.js'),
 '/* This if for SCORM 1.2, adapted from SCORM 2004 2nd Ed., BUT not everything has been tested! */\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** FileName: APIWrapper.js\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Concurrent Technologies Corporation (CTC) grants you ("Licensee") a non-\r\n'
+'** exclusive, royalty free, license to use, modify and redistribute this\r\n'
+'** software in source and binary code form, provided that i) this copyright\r\n'
+'** notice and license appear on all copies of the software; and ii) Licensee does\r\n'
+'** not utilize the software in a manner which is disparaging to CTC.\r\n'
+'**\r\n'
+'** This software is provided "AS IS," without a warranty of any kind.  ALL\r\n'
+'** EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND WARRANTIES, INCLUDING ANY\r\n'
+'** IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NON-\r\n'
+'** INFRINGEMENT, ARE HEREBY EXCLUDED.  CTC AND ITS LICENSORS SHALL NOT BE LIABLE\r\n'
+'** FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR\r\n'
+'** DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES.  IN NO EVENT WILL CTC  OR ITS\r\n'
+'** LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT,\r\n'
+'** INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER\r\n'
+'** CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF\r\n'
+'** OR INABILITY TO USE SOFTWARE, EVEN IF CTC  HAS BEEN ADVISED OF THE POSSIBILITY\r\n'
+'** OF SUCH DAMAGES.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'** This file is part of the ADL Sample API Implementation intended to provide\r\n'
+'** an elementary example of the concepts presented in the ADL Sharable\r\n'
+'** Content Object Reference Model (SCORM).\r\n'
+'**\r\n'
+'** The purpose in wrapping the calls to the API is to (1) provide a\r\n'
+'** consistent means of finding the LMS API implementation within the window\r\n'
+'** hierarchy and (2) to validate that the data being exchanged via the\r\n'
+'** API conforms to the defined CMI data types.\r\n'
+'**\r\n'
+'** This is just one possible example for implementing the API guidelines for\r\n'
+'** runtime communication between an LMS and executable content components.\r\n'
+'** There are several other possible implementations.\r\n'
+'**\r\n'
+'** Usage: Executable course content can call the API Wrapper\r\n'
+'**      functions as follows:\r\n'
+'**\r\n'
+'**    javascript:\r\n'
+'**          var result = doInitialize();\r\n'
+'**          if (result != true) \r\n'
+'**          {\r\n'
+'**             // handle error\r\n'
+'**          }\r\n'
+'**\r\n'
+'**    authorware:\r\n'
+'**          result := ReadURL("javascript:doInitialize()", 100)\r\n'
+'**\r\n'
+'**    director:\r\n'
+'**          result = externalEvent("javascript:doInitialize()")\r\n'
+'**\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'\r\n'
+'var _Debug = false;  // set this to false to turn debugging off\r\n'
+'                     // and get rid of those annoying alert boxes.\r\n'
+'\r\n'
+'// Define exception/error codes\r\n'
+'var _NoError = 0;\r\n'
+'var _GeneralException = 101;\r\n'
+'var _GeneralInitializationFailure = 102;\r\n'
+'var _AlreadyInitialized = 103;\r\n'
+'var _ContentInstanceTerminated = 104;\r\n'
+'var _GeneralTerminationFailure = 111;\r\n'
+'var _TerminationBeforeInitialization = 112;\r\n'
+'var _TerminationAfterTermination = 113;\r\n'
+'var _ReceivedDataBeforeInitialization = 122;\r\n'
+'var _ReceivedDataAfterTermination = 123;\r\n'
+'var _StoreDataBeforeInitialization = 132;\r\n'
+'var _StoreDataAfterTermination = 133;\r\n'
+'var _CommitBeforeInitialization = 142;\r\n'
+'var _CommitAfterTermination = 143;\r\n'
+'var _GeneralArgumentError = 201;\r\n'
+'var _GeneralGetFailure = 301;\r\n'
+'var _GeneralSetFailure = 351;\r\n'
+'var _GeneralCommitFailure = 391;\r\n'
+'var _UndefinedDataModelElement = 401;\r\n'
+'var _UnimplementedDataModelElement = 402;\r\n'
+'var _DataModelElementValueNotInitialized = 403;\r\n'
+'var _DataModelElementIsReadOnly = 404;\r\n'
+'var _DataModelElementIsWriteOnly = 405;\r\n'
+'var _DataModelElementTypeMismatch = 406;\r\n'
+'var _DataModelElementValueOutOfRange = 407;\r\n'
+'\r\n'
+'\r\n'
+'// local variable definitions\r\n'
+'var apiHandle = null;\r\n'
+'var API = null;\r\n'
+'var findAPITries = 0;\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function: doInitialize()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  CMIBoolean true if the initialization was successful, or\r\n'
+'**          CMIBoolean false if the initialization failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Initialize communication with LMS by calling the Initialize\r\n'
+'** function which will be implemented by the LMS.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doInitialize()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nInitialize was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'\r\n'
+'   var result = api.LMSInitialize("");\r\n'
+'\r\n'
+'   if (result.toString() != "true")\r\n'
+'   {\r\n'
+'      var err = ErrorHandler();\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doTerminate()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  CMIBoolean true if successful\r\n'
+'**          CMIBoolean false if failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Close communication with LMS by calling the Terminate\r\n'
+'** function which will be implemented by the LMS\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doTerminate()\r\n'
+'{  \r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nTerminate was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      // call the Terminate function that should be implemented by the API\r\n'
+'\r\n'
+'      var result = api.LMSFinish("");\r\n'
+'      if (result.toString() != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetValue(name)\r\n'
+'** Inputs:  name - string representing the cmi data model defined category or\r\n'
+'**             element (e.g. cmi.core.student_id)\r\n'
+'** Return:  The value presently assigned by the LMS to the cmi data model\r\n'
+'**       element defined by the element or category identified by the name\r\n'
+'**       input value.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Wraps the call to the GetValue method\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetValue(name)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetValue was not successful.");\r\n'
+'      return "";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var value = api.LMSGetValue(name);\r\n'
+'      var errCode = api.LMSGetLastError().toString();\r\n'
+'      if (errCode != _NoError)\r\n'
+'      {\r\n'
+'         // an error was encountered so display the error description\r\n'
+'         var errDescription = api.LMSGetErrorString(errCode);\r\n'
+'         alert("GetValue("+name+") failed. \\n"+ errDescription);\r\n'
+'         return "";\r\n'
+'      }\r\n'
+'      else\r\n'
+'      {\r\n'
+'         \r\n'
+'         return value.toString();\r\n'
+'      }\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doSetValue(name, value)\r\n'
+'** Inputs:  name -string representing the data model defined category or element\r\n'
+'**          value -the value that the named element or category will be assigned\r\n'
+'** Return:  CMIBoolean true if successful\r\n'
+'**          CMIBoolean false if failed.\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Wraps the call to the SetValue function\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doSetValue(name, value)\r\n'
+'{  \r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nSetValue was not successful.");\r\n'
+'      return;\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var result = api.LMSSetValue(name, value);\r\n'
+'      if (result.toString() != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'   }\r\n'
+'\r\n'
+'   return;\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doCommit()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  None\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the Commit function \r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doCommit()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nCommit was not successful.");\r\n'
+'      return "false";\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      var result = api.LMSCommit("");\r\n'
+'      if (result != "true")\r\n'
+'      {\r\n'
+'         var err = ErrorHandler();\r\n'
+'      }\r\n'
+'   }\r\n'
+'\r\n'
+'   return result.toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetLastError()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  The error code that was set by the last LMS function call\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the GetLastError function \r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetLastError()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetLastError was not successful.");\r\n'
+'      //since we can\'t get the error code from the LMS, return a general error\r\n'
+'      return _GeneralError;\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetLastError().toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetErrorString(errorCode)\r\n'
+'** Inputs:  errorCode - Error Code\r\n'
+'** Return:  The textual description that corresponds to the input error code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the GetErrorString function \r\n'
+'**\r\n'
+'********************************************************************************/\r\n'
+'function doGetErrorString(errorCode)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetErrorString was not successful.");\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetErrorString(errorCode).toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function doGetDiagnostic(errorCode)\r\n'
+'** Inputs:  errorCode - Error Code(integer format), or null\r\n'
+'** Return:  The vendor specific textual description that corresponds to the \r\n'
+'**          input error code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Call the LMSGetDiagnostic function\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function doGetDiagnostic(errorCode)\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nGetDiagnostic was not successful.");\r\n'
+'   }\r\n'
+'\r\n'
+'   return api.LMSGetDiagnostic(errorCode).toString();\r\n'
+'}\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function ErrorHandler()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  The current value of the LMS Error Code\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Determines if an error was encountered by the previous API call\r\n'
+'** and if so, displays a message to the user.  If the error code\r\n'
+'** has associated text it is also displayed.\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function ErrorHandler()\r\n'
+'{\r\n'
+'   var api = getAPIHandle();\r\n'
+'   if (api == null)\r\n'
+'   {\r\n'
+'      alert("Unable to locate the LMS\'s API Implementation.\\nCannot determine LMS error code.");\r\n'
+'      return;\r\n'
+'   }\r\n'
+'\r\n'
+'   // check for errors caused by or from the LMS\r\n'
+'   var errCode = api.LMSGetLastError().toString();\r\n'
+'   if (errCode != _NoError && errCode != _AlreadyInitialized )\r\n'
+'   {\r\n'
+'      // an error was encountered so display the error description\r\n'
+'      var errDescription = api.LMSGetErrorString(errCode);\r\n'
+'\r\n'
+'      if (_Debug == true)\r\n'
+'      {\r\n'
+'         errDescription += "\\n";\r\n'
+'         errDescription += api.LMSGetDiagnostic(null);\r\n'
+'         // by passing null to GetDiagnostic, we get any available diagnostics\r\n'
+'         // on the previous error.\r\n'
+'      }\r\n'
+'\r\n'
+'      alert(errDescription);\r\n'
+'   }\r\n'
+'\r\n'
+'   return errCode;\r\n'
+'}\r\n'
+'\r\n'
+'/******************************************************************************\r\n'
+'**\r\n'
+'** Function getAPIHandle()\r\n'
+'** Inputs:  None\r\n'
+'** Return:  value contained by APIHandle\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** Returns the handle to API object if it was previously set,\r\n'
+'** otherwise it returns null\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function getAPIHandle()\r\n'
+'{\r\n'
+'   if (apiHandle == null)\r\n'
+'   {\r\n'
+'      apiHandle = getAPI();\r\n'
+'   }\r\n'
+'\r\n'
+'   return apiHandle;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function findAPI(win)\r\n'
+'** Inputs:  win - a Window Object\r\n'
+'** Return:  If an API object is found, it\'s returned, otherwise null is returned\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** This function looks for an object named API in parent and opener windows\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function findAPI(win)\r\n'
+'{\r\n'
+'   while ((win.API == null) && (win.parent != null) && (win.parent != win))\r\n'
+'   {\r\n'
+'      findAPITries++;\r\n'
+'      \r\n'
+'      if (findAPITries > 500) \r\n'
+'      {\r\n'
+'         alert("Error finding API -- too deeply nested.");\r\n'
+'         return null;\r\n'
+'      }\r\n'
+'      \r\n'
+'      win = win.parent;\r\n'
+'\r\n'
+'   }\r\n'
+'   return win.API;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'/*******************************************************************************\r\n'
+'**\r\n'
+'** Function getAPI()\r\n'
+'** Inputs:  none\r\n'
+'** Return:  If an API object is found, it\'s returned, otherwise null is returned\r\n'
+'**\r\n'
+'** Description:\r\n'
+'** This function looks for an object named API, first in the current window\'s \r\n'
+'** frame hierarchy and then, if necessary, in the current window\'s opener window\r\n'
+'** hierarchy (if there is an opener window).\r\n'
+'**\r\n'
+'*******************************************************************************/\r\n'
+'function getAPI()\r\n'
+'{\r\n'
+'   var theAPI = findAPI(window);\r\n'
+'   if ((theAPI == null) && (window.opener != null) && (typeof(window.opener) != "undefined"))\r\n'
+'   {\r\n'
+'      theAPI = findAPI(window.opener);\r\n'
+'   }\r\n'
+'   if (theAPI == null)\r\n'
+'   {\r\n'
+'      alert("Unable to find an API adapter");\r\n'
+'   }\r\n'
+'   return theAPI\r\n'
+'}\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});




chain.push(function createJS4 () {
  fs.writeFile( path.resolve(tmp, 'Interfaces', 'empty_C3_interface', 'Utils', 'SCOFunctions.js'),
 '/* This if for SCORM 1.2, adapted from SCORM 2004 2nd Ed., BUT not everything has been tested! */\r\n'
+'\r\n'
+'var traceSCORM_API = false;\r\n'
+'\r\n'
+'var APP_NAME = \'C3 SCORM Runtime\';\r\n'
+'\r\n'
+'var SCO_LMS_Version;\r\n'
+'var SCO_LMS_Status;\r\n'
+'var SCO_ExitPageStatus;\r\n'
+'\r\n'
+'var SCO_StartTimestamp;\r\n'
+'var SCO_EndTimestamp;\r\n'
+'\r\n'
+'var SCO_STATUS_UNKNOWN       = \'unknown\';\r\n'
+'var SCO_STATUS_NOT_ATTEMPTED = \'not attempted\';\r\n'
+'var SCO_STATUS_INCOMPLETE    = \'incomplete\';\r\n'
+'var SCO_STATUS_COMPLETED     = \'completed\';\r\n'
+'\r\n'
+'var SCO_LessonStatus         = SCO_STATUS_NOT_ATTEMPTED;\r\n'
+'\r\n'
+'var CMI_LOCATION          = \'cmi.core.lesson_location\';\r\n'
+'var CMI_SESSION_TIME      = \'cmi.core.session_time\';\r\n'
+'var CMI_VERSION           = \'cmi._version\';\r\n'
+'var CMI_COMPLETION_STATUS = \'cmi.core.lesson_status\';\r\n'
+'\r\n'
+'var CMI_SCORE             = \'cmi.core.score.raw\';  // -1 <= s <= 1\r\n'
+'var CMI_PASSING_SCORE     = \'cmi.scaled_passing\';  // -1 <= s <= 1\r\n'
+'\r\n'
+'var CMI_SUCCESS_STATUS         = CMI_COMPLETION_STATUS; //1.2 has no Success Status\r\n'
+'var CMI_SUCCESS_STATUS_PASSED  = \'passed\';\r\n'
+'var CMI_SUCCESS_STATUS_FAILED  = \'failed\';\r\n'
+'var CMI_SUCCESS_STATUS_UNKNOWN = \'incomplete\';\r\n'
+'\r\n'
+'var CMI_INTERACTIONS_ID               = \'cmi.interactions.n.id\';\r\n'
+'var CMI_INTERACTIONS_TYPE             = \'cmi.interactions.n.type\';\r\n'
+'var CMI_INTERACTIONS_TYPE_TF          = \'true-false\';\r\n'
+'var CMI_INTERACTIONS_TYPE_CHOICE      = \'choice\';\r\n'
+'var CMI_INTERACTIONS_TYPE_MATCHING    = \'matching\';\r\n'
+'var CMI_INTERACTIONS_CORRECT_RESPONSES_COUNT = "cmi.interactions.n.correct_responses._count";\r\n'
+'var CMI_INTERACTIONS_CORRECT          = \'cmi.interactions.n.correct_responses.0.pattern\';\r\n'
+'var CMI_INTERACTIONS_RESPONSE         = \'cmi.interactions.n.student_response\';\r\n'
+'var CMI_INTERACTIONS_RESULT           = \'cmi.interactions.n.result\';\r\n'
+'var CMI_INTERACTIONS_RESULT_CORRECT   = \'correct\';\r\n'
+'var CMI_INTERACTIONS_RESULT_INCORRECT = \'wrong\';\r\n'
+'var CMI_INTERACTIONS_WEIGHTING        = \'cmi.interactions.n.weighting\'; \r\n'
+'\r\n'
+'var CMI_EXIT                          = \'cmi.exit\';\r\n'
+'var CMI_EXIT_NORMAL                   = \'normal\';\r\n'
+'var CMI_EXIT_SUSPEND                  = \'suspend\';\r\n'
+'var CMI_EXIT_TIMEOUT                  = \'time-out\';\r\n'
+'var CMI_EXIT_LOGOUT                   = \'logout\';\r\n'
+'var CMI_EXIT_UNDETERMINED             = \'\';\r\n'
+'var CMI_SUSPEND_DATA                  = \'cmi.suspend_data\'; \r\n'
+'\r\n'
+'var ADL_NAV_REQUEST             = \'adl.nav.request\';\r\n'
+'\r\n'
+'var SCO_NAV_REQUEST_CONTINUE    = \'continue\';\r\n'
+'var SCO_NAV_REQUEST_PREVIOUS    = \'previous\';\r\n'
+'var SCO_NAV_REQUEST_CHOICE      = \'choice\';\r\n'
+'var SCO_NAV_REQUEST_EXIT        = \'exit\';\r\n'
+'var SCO_NAV_REQUEST_EXIT_ALL    = \'exitAll\';\r\n'
+'var SCO_NAV_REQUEST_ABANDON     = \'abandon\';\r\n'
+'var SCO_NAV_REQUEST_ABANDON_ALL = \'abandonAll\';\r\n'
+'var SCO_NAV_REQUEST_NONE        = \'_none_\';\r\n'
+'\r\n'
+'var ADL_NAV_REQUEST_VALID_PREVIOUS = \'adl.nav.request_valid.previous\';\r\n'
+'var ADL_NAV_REQUEST_VALID_CONTINUE = \'adl.nav.request_valid.continue\';\r\n'
+'\r\n'
+'\r\n'
+'function QTypeToCMI_INTERACTION_TYPE( type )\r\n'
+'{\r\n'
+'   switch (type.toUpperCase())\r\n'
+'   {\r\n'
+'      case \'TRUE_FALSE\':             type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MULTIPLE_CHOICE\':        type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MULTI_MULTIPLE_CHOICE\':  type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'      case \'MATCHING\':               type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'      case \'ORDERING\':               type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'      case \'DRAG_AND_DROP\':          type = CMI_INTERACTIONS_TYPE_MATCHING; break;\r\n'
+'\r\n'
+'      default:                       type = CMI_INTERACTIONS_TYPE_CHOICE;   break;\r\n'
+'   }\r\n'
+'\r\n'
+'   return type;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function ConvertToCMI_INTERACTION_TYPE(type, pattern) \r\n'
+'{\r\n'
+'    var out = \'\';\r\n'
+'\r\n'
+'    pattern = pattern.replace(/^\\s+|\\s+$/g, \'\');\r\n'
+'\r\n'
+'    var p = pattern.split(\',\');\r\n'
+'\r\n'
+'\r\n'
+'    switch (type) {\r\n'
+'        case CMI_INTERACTIONS_TYPE_CHOICE:\r\n'
+'            for (var i = 0; i < p.length; i++)\r\n'
+'                p[i] = (i + 1) + \'_\' + p[i];\r\n'
+'\r\n'
+'            break;\r\n'
+'\r\n'
+'        case CMI_INTERACTIONS_TYPE_MATCHING:\r\n'
+'            for (var i = 0; i < p.length; i++)\r\n'
+'                p[i] = (i + 1) + \'[.]\' + p[i];\r\n'
+'\r\n'
+'            break;\r\n'
+'    }\r\n'
+'\r\n'
+'    //alert(\'ConvertToCMI{\' + p.join(\'[,]\') + \'}\');\r\n'
+'\r\n'
+'    out = p.join(\'[,]\');\r\n'
+'\r\n'
+'    return out;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function ConvertFromCMI_INTERACTION_TYPE(type, pattern) \r\n'
+'{\r\n'
+'    var out;\r\n'
+'\r\n'
+'    var p = pattern.split(\'[,]\');\r\n'
+'\r\n'
+'    switch (type) {\r\n'
+'        case CMI_INTERACTIONS_TYPE_CHOICE:\r\n'
+'            for (var i = 0; i < p.length; i++)\r\n'
+'                p[i] = p[i].split(\'_\')[1];\r\n'
+'\r\n'
+'            break;\r\n'
+'\r\n'
+'        case CMI_INTERACTIONS_TYPE_MATCHING:\r\n'
+'            for (var i = 0; i < p.length; i++)\r\n'
+'                p[i] = p[i].split(\'[.]\')[1];\r\n'
+'\r\n'
+'            break;\r\n'
+'    }\r\n'
+'\r\n'
+'    //alert(\'ConvertFromCMI{\' + pattern.join(\' \') + \'}\');\r\n'
+'\r\n'
+'    out = pattern.join(\' \');\r\n'
+'\r\n'
+'    return out;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_GetInteractionResponse( n, id, type )\r\n'
+'{\r\n'
+'   return \'\'; //In 1.2 the cmi.interactions.n.student_response is write-only.\r\n'
+'   \r\n'
+'   InitializeNonexistantInteractions(n);\r\n'
+'   \r\n'
+'   type = QTypeToCMI_INTERACTION_TYPE( type );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + n + \'.\'),   id );\r\n'
+'   doSetValue( CMI_INTERACTIONS_TYPE.replace(\'.n.\', \'.\' + n + \'.\'), type );\r\n'
+'\r\n'
+'   var value = doGetValue( ConvertFromCMI_INTERACTION_TYPE( type, CMI_INTERACTIONS_RESPONSE.replace(\'.n.\', \'.\' + n + \'.\') ) );\r\n'
+'\r\n'
+'   //alert(\'SCO_GetInteractionResponse: \' + value + \'\\n\\nvalue: \' + typeof(value));\r\n'
+'\r\n'
+'   return value;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetInteraction( n, id, type, correctPattern, currentPattern, score , passingScore)\r\n'
+'{\r\n'
+'   /*\r\n'
+'   alert(\r\n'
+'      \'SCO_SetInteraction:\\n\\n\' +\r\n'
+'      \'interation number n = \' + n + \'\\n\\n\' +\r\n'
+'      \'id = \' + id + \'\\n\\n\' +\r\n'
+'      \'type = \' + type + \'\\n\\n\' +\r\n'
+'      \'correctPattern = \' + correctPattern + \'\\n\\n\' +\r\n'
+'      \'currentPattern = \' + currentPattern + \'\\n\\n\' +\r\n'
+'      \'score = \' + score + \'\\n\\n\' +\r\n'
+'      \'passingScore = \' + passingScore\r\n'
+'   );\r\n'
+'   */\r\n'
+'\r\n'
+'   InitializeNonexistantInteractions(n);\r\n'
+'\r\n'
+'   type = QTypeToCMI_INTERACTION_TYPE( type );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + n + \'.\'),   id );\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_TYPE.replace(\'.n.\', \'.\' + n + \'.\'), type );\r\n'
+'\r\n'
+'   if (Number(doGetValue(CMI_INTERACTIONS_CORRECT_RESPONSES_COUNT.replace(\'.n.\', \'.\' + n + \'.\'))) == 0)\r\n'
+'       doSetValue(CMI_INTERACTIONS_CORRECT.replace(\'.n.\', \'.\' + n + \'.\'), ConvertToCMI_INTERACTION_TYPE(type, correctPattern));\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_RESPONSE.replace(\'.n.\', \'.\' + n + \'.\'), ConvertToCMI_INTERACTION_TYPE( type, currentPattern ) );\r\n'
+'\r\n'
+'   var result = CMI_INTERACTIONS_RESULT_INCORRECT;\r\n'
+'\r\n'
+'   if ( correctPattern == currentPattern )\r\n'
+'      result = CMI_INTERACTIONS_RESULT_CORRECT;\r\n'
+'\r\n'
+'   doSetValue( CMI_INTERACTIONS_RESULT.replace(\'.n.\', \'.\' + n + \'.\'), result );\r\n'
+'\r\n'
+'   doSetValue( CMI_SCORE,         (score        / 100 ).toPrecision(3) );\r\n'
+'\r\n'
+'   /*\r\n'
+'   doSetValue( CMI_PASSING_SCORE, (passingScore / 100 ).toPrecision(3) );\r\n'
+'\r\n'
+'   if ( doGetValue( CMI_PASSING_SCORE ) == \'\' )\r\n'
+'   {\r\n'
+'      if ( score >= passingScore )\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_PASSED );\r\n'
+'      else\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_FAILED );\r\n'
+'\r\n'
+'   }\r\n'
+'   */\r\n'
+'\r\n'
+'   if ( passingScore != undefined && passingScore != \'\' )\r\n'
+'   {\r\n'
+'      if ( score >= passingScore )\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_PASSED );\r\n'
+'      else\r\n'
+'         doSetValue( CMI_SUCCESS_STATUS, CMI_SUCCESS_STATUS_FAILED );\r\n'
+'\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function InitializeNonexistantInteractions(n)\r\n'
+'{\r\n'
+'   try\r\n'
+'   {\r\n'
+'        var count = doGetValue( CMI_INTERACTIONS_ID.replace(\'.n.id\', \'._count\'));\r\n'
+'        var top   = n + 1;\r\n'
+'\r\n'
+'        for (var i = count; i < top; i++)\r\n'
+'        {\r\n'
+'            doSetValue( CMI_INTERACTIONS_ID.replace(\'.n.\', \'.\' + i + \'.\'),   \'INIT\' + i );\r\n'
+'        }\r\n'
+'   }\r\n'
+'   catch (e) {}\r\n'
+'}\r\n'
+' \r\n'
+'\r\n'
+'function SCO_LoadICU()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_LoadICU()\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        SCO_StartTimestamp = new Date();\r\n'
+' \r\n'
+'        SCO_LMS_Status = doInitialize();\r\n'
+'\r\n'
+'        //Not used, and the Meridian/MCALMS does not implement the CMI_VERSION, so this caues an error.\r\n'
+'        //if (SCO_LMS_Status == "true")\r\n'
+'        //   SCO_LMS_Version = doGetValue( CMI_VERSION );\r\n'
+'    }\r\n'
+'    catch(e)\r\n'
+'    {\r\n'
+'        alert( APP_NAME + \' SCO_LoadPage() Problem: \' + e.message );\r\n'
+'    }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_ExitICU(manual) \r\n'
+'{\r\n'
+'    manual = (manual == undefined ? false : manual);\r\n'
+'\r\n'
+'\r\n'
+'    if (lessonUnloaded == true)\r\n'
+'       return;\r\n'
+'\r\n'
+'\r\n'
+'    var unfinished = ShowGradeDialog(manual);\r\n'
+'\r\n'
+'    if ( unfinished != \'\' && manual == true)\r\n'
+'    {\r\n'
+'       loadFrame( unfinished);\r\n'
+'       return;\r\n'
+'    }\r\n'
+'\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_ExitICU()\');\r\n'
+'\r\n'
+'    SCO_EndTimestamp = new Date();\r\n'
+'\r\n'
+'    var n;\r\n'
+'  \r\n'
+'    if (SCO_LMS_Status =="true") \r\n'
+'    {\r\n'
+'        if (SCO_ExitPageStatus != true) \r\n'
+'        {\t\t\t\r\n'
+'            try\r\n'
+'            {\r\n'
+'                SCO_ExitPageStatus = true;\r\n'
+'\r\n'
+'                doSetValue( CMI_SESSION_TIME, \r\n'
+'                            SCO_CalcElapstedTime1_2( SCO_StartTimestamp, SCO_EndTimestamp ) );\r\n'
+'\r\n'
+'                doCommit();\r\n'
+'            }\r\n'
+'            catch(e)\r\n'
+'            {\r\n'
+'                alert( APP_NAME + \' SCO_ExitPage() Problem: \' + e.message );\r\n'
+'            }\r\n'
+'            finally\r\n'
+'            {\r\n'
+'                doTerminate();\r\n'
+'            }\r\n'
+'        }\r\n'
+'    }\t\r\n'
+'\r\n'
+'    try { RuntimeStopAllMultimedia( argExitFrame=true ) } catch (e) {}\r\n'
+'\r\n'
+'\r\n'
+'    // If we\'re not running in an LMS, then we\'ll close the courseware window!\r\n'
+'\r\n'
+'    //if (SCO_LMS_Status =="false")\t\r\n'
+'        window.close();\r\n'
+'\r\n'
+'\r\n'
+'    lessonUnloaded = true;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_LoadFrame( frameBookmarkId, bHiddenFrame )\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_LoadFrame("\' + frameBookmarkId + \'")\');\r\n'
+'\r\n'
+'    bHiddenFrame = (bHiddenFrame == undefined) ? false : bHiddenFrame;\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        doSetValue( CMI_LOCATION, frameBookmarkId );\r\n'
+'\r\n'
+'        if (bHiddenFrame == false)\r\n'
+'           doCommit();\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_ExitFrame()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_ExitFrame()\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_GetBookmarkLocation()\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_GetBookmarkLocation()\');\r\n'
+'\r\n'
+'    var location = \'\';\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        location = doGetValue( CMI_LOCATION );\r\n'
+'\r\n'
+'        if ( doGetLastError() == _DataModelElementValueNotInitialized )\r\n'
+'            location = \'\';\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'\r\n'
+'    return location;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_NotAttempted( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_NOT_ATTEMPTED, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_Incomplete( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_INCOMPLETE, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatus_Completed( latch )\r\n'
+'{\r\n'
+'    SCO_SetStatusLatched( SCO_STATUS_COMPLETED, latch );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_PreviousSCOAvailable()\r\n'
+'{\r\n'
+'    var value = doGetValue( ADL_NAV_REQUEST_VALID_PREVIOUS).toLowerCase();\r\n'
+'\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_PreviousSCOAvailable() \' + value);\r\n'
+'\r\n'
+'    return (value == \'true\');\r\n'
+'}\r\n'
+'\r\n'
+'function SCO_NextSCOAvailable()\r\n'
+'{\r\n'
+'    var value = doGetValue( ADL_NAV_REQUEST_VALID_CONTINUE).toLowerCase();\r\n'
+'\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_NextSCOAvailable() \' + value);\r\n'
+'\r\n'
+'    return (value == \'true\');\r\n'
+'}\r\n'
+'\r\n'
+'function SCO_SetNavigation( navCommand )\r\n'
+'{\r\n'
+'    //Not used in SCORM 1.2\r\n'
+'    //navCommand = (navCommand == undefined) ? SCO_NAV_REQUEST_NONE : navCommand;\r\n'
+'\r\n'
+'    //doSetValue( ADL_NAV_REQUEST, navCommand );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_LoadSuspendData()\r\n'
+'{\r\n'
+'   //return \'0_1|1_0\'; //for testing\r\n'
+'   return doGetValue( CMI_SUSPEND_DATA );\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SaveSuspendData( data )\r\n'
+'{\r\n'
+'   //Suspend Data not supported in 1.2\r\n'
+'   return;\r\n'
+'   \r\n'
+'   \r\n'
+'   //alert(\'SuspendData\\n\\n\' + data);\r\n'
+'   doSetValue( CMI_EXIT,         CMI_EXIT_SUSPEND );\r\n'
+'   doSetValue( CMI_SUSPEND_DATA, data );\r\n'
+'   doCommit();\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'////////////// Supporting Routines ///////////////\r\n'
+'\r\n'
+'\r\n'
+'// Returns elapsted time in SCORM "timeinterval" form:\r\n'
+'//\r\n'
+'//  P[yY][mM][dD][T[hH][mM][s[.s]S]]\r\n'
+'//\r\n'
+'//  where:\r\n'
+'//\r\n'
+'//  • y: The number of years   (integer, >= 0, not restricted)\r\n'
+'//  • m: The number of months  (integer, >= 0, not restricted)\r\n'
+'//  • d: The number of days    (integer, >= 0, not restricted)\r\n'
+'//  • h: The number of hours   (integer, >= 0, not restricted)\r\n'
+'//  • n: The number of minutes (integer, >= 0, not restricted)\r\n'
+'//  • s: The number of seconds or fraction of seconds \r\n'
+'//       (real or integer, >= 0, not restricted). If fractions \r\n'
+'//       of a second are used, SCORM further restricts the string \r\n'
+'//       to a maximum of 2 digits (e.g., 34.45 – valid, \r\n'
+'//       34.45454545 – not valid).\r\n'
+'//\r\n'
+'//  • The character literals designators “P”,”Y”,”M”,”D”,”T”,”H”,\r\n'
+'//    ”M”,”S” shall appear if the corresponding non-zero value is \r\n'
+'//    present.\r\n'
+'//\r\n'
+'//  Example:\r\n'
+'//\r\n'
+'//  • P1Y3M2DT3H indicates a period of time of 1 year, 3 months, \r\n'
+'//    2 days and 3 hours\r\n'
+'//  • PT3H5M indicates a period of time of 3 hours and 5 minutes\r\n'
+'\r\n'
+'\r\n'
+'function SCO_CalcElapstedTime( startTimestamp, endTimestamp )\r\n'
+'{\r\n'
+'   var diff = Math.floor( (( endTimestamp) - startTimestamp ) / 1000);\r\n'
+'\r\n'
+'    var years  = 0;\r\n'
+'    var months = 0;\r\n'
+'    var days   = 0;\r\n'
+'\r\n'
+'    var csecs  = Math.floor(((endTimestamp - startTimestamp) % 1000) / 10);\r\n'
+'    var secs   = Math.floor( diff % 60);\r\n'
+'    var mins   = Math.floor( diff / 60) % 60;\r\n'
+'    var hours  = Math.floor( diff / 3600);\r\n'
+'\r\n'
+'    return \'P\' + \r\n'
+'           years  + \'Y\' +\r\n'
+'           months + \'M\' +\r\n'
+'           days   + \'D\' +\r\n'
+'           \'T\' +\r\n'
+'           hours  + \'H\' +\r\n'
+'           mins   + \'M\' +\r\n'
+'           secs   + \'.\' + (\'00\'+csecs  ).replace(/.*?(\\d{2})$/,\'\\$1\') + \'S\';\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function SCO_CalcElapstedTime1_2( startTimestamp, endTimestamp )\r\n'
+'{\r\n'
+'   var diff = Math.floor( (( endTimestamp) - startTimestamp ) / 1000);\r\n'
+'\r\n'
+'    var years  = 0;\r\n'
+'    var months = 0;\r\n'
+'    var days   = 0;\r\n'
+'\r\n'
+'    var csecs  = Math.floor(((endTimestamp - startTimestamp) % 1000) / 10);\r\n'
+'    var secs   = Math.floor( diff % 60);\r\n'
+'    var mins   = Math.floor( diff / 60) % 60;\r\n'
+'    var hours  = Math.floor( diff / 3600);\r\n'
+'\r\n'
+'    return (\'0000\' + (hours+0)).replace(/.*?(\\d{4,4})$/, \'\\$1\') + \':\' +\r\n'
+'           (\'00\'   + (mins +0)).replace(/.*?(\\d{2,2})$/, \'\\$1\') + \':\' +\r\n'
+'           (\'00\'   + (secs +0)).replace(/.*?(\\d{2,2})$/, \'\\$1\') + \'.\' +\r\n'
+'           (\'00\'   + (csecs+0)).replace(/.*?(\\d{2,2})$/, \'\\$1\');\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function SCO_SetStatusLatched( status, latch )\r\n'
+'{\r\n'
+'    if ( traceSCORM_API ) alert(\'SCOFunctions SCO_SetStatusLatched("\' + status + \'")\');\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        latch = (latch != undefined) ? latch : false;\r\n'
+'\r\n'
+'        if ( latch )\r\n'
+'        {\r\n'
+'            var currentStatus = doGetValue( CMI_COMPLETION_STATUS );\r\n'
+'\r\n'
+'            if ( currentStatus == SCO_STATUS_UNKNOWN )\r\n'
+'                currentStatus = SCO_STATUS_NOT_ATTEMPTED;\r\n'
+'\r\n'
+'\r\n'
+'            if ( currentStatus == SCO_STATUS_NOT_ATTEMPTED )\r\n'
+'            {\r\n'
+'                if ( status == SCO_STATUS_INCOMPLETE ||\r\n'
+'                     status == SCO_STATUS_COMPLETED)\r\n'
+'                {\r\n'
+'                    doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'                    doCommit();\r\n'
+'                }\r\n'
+'            }\r\n'
+'            else\r\n'
+'            if ( currentStatus == SCO_STATUS_INCOMPLETE )\r\n'
+'            {\r\n'
+'                if ( status == SCO_STATUS_COMPLETED )\r\n'
+'                {\r\n'
+'                    doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'                    doCommit();\r\n'
+'                }\r\n'
+'            }\r\n'
+'            else\r\n'
+'            if ( currentStatus == SCO_STATUS_COMPLETED )\r\n'
+'            {\r\n'
+'                // Do nothing...\r\n'
+'            }\r\n'
+'        }\r\n'
+'        else\r\n'
+'        {\r\n'
+'            doSetValue( CMI_COMPLETION_STATUS, status );\r\n'
+'            doCommit();\r\n'
+'        }\r\n'
+'    }\r\n'
+'    catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+''
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createHTML1 () {
  fs.writeFile( path.resolve(tmp, 'ICU_' + contentUuid, 'index.html'),
 '<script id="SUPPORTING_ROUTINES" type="text/javascript">\r\n'
+'  //non-xml interface if not in C3 editor, preview mode or C3 portal \r\n'
+'  //make sure data.js is created with frame_extractor.html\r\n'
+'   if(document.location.href.toUpperCase().indexOf("EDITMODE=TRUE") == -1 & document.location.href.toUpperCase().indexOf("PREVIEWMODE=TRUE") == -1 & document.location.href.toUpperCase().indexOf("C3_PUBLISH") == -1)   {  \r\n'
+'     document.location = "Media/interface.html";\r\n'
+'   }\r\n'
+'///\r\n'
+'/// IE/Wc3/Safari: Load and return an XML document\r\n'
+'///\r\n'
+'\r\n'
+'function C3LoadXMLDocument(uri, noXPathUse)\r\n'
+'{\r\n'
+'    noXPathUse = (noXPathUse ? noXPathUse : false);\r\n'
+'\r\n'
+'    var doc = null;\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        //Wc3 DOM\r\n'
+'        if (document.implementation.createDocument)\r\n'
+'            doc = document.implementation.createDocument("", "", null);\r\n'
+'\r\n'
+'        //IE DOM\r\n'
+'        else\r\n'
+'        if (C3HasActiveXObject())\r\n'
+'        {\r\n'
+'            doc = new ActiveXObject("Microsoft.XMLDOM");\r\n'
+'\r\n'
+'            if (!noXPathUse)\r\n'
+'                doc.setProperty("SelectionLanguage", "XPath");\r\n'
+'        }\r\n'
+'\r\n'
+'        if (doc != null)\r\n'
+'        {\r\n'
+'            try\r\n'
+'            {\r\n'
+'                doc.async = false;\r\n'
+'                doc.load(uri);\r\n'
+'            }\r\n'
+'            catch (e) //SAFARI DOM\r\n'
+'            {\r\n'
+'                try\r\n'
+'                {\r\n'
+'                    var req = new XMLHttpRequest();\r\n'
+'\r\n'
+'                    req.open("GET", uri, argAsync=false);\r\n'
+'\r\n'
+'                    req.send("");\r\n'
+'\r\n'
+'                    doc = new DOMParser().parseFromString( \'<xml/>\', \'application/xml\');\r\n'
+'                    doc = doc.loadXML( req.responseText);\r\n'
+'                }\r\n'
+'                catch (e)\r\n'
+'                {\r\n'
+'                    throw(e);\r\n'
+'                }\r\n'
+'            }\r\n'
+'        }\r\n'
+'        else\r\n'
+'            throw("No method in DOM to do this!");\r\n'
+'    }\r\n'
+'    catch (e)\r\n'
+'    {\r\n'
+'        W3CCheckThatWeCanFetchXMLFromDisk();\r\n'
+'    }\r\n'
+'\r\n'
+'\r\n'
+'   return doc;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'///\r\n'
+'/// Test to see if we can fetch an xml document from the local disk. If we can\'t\r\n'
+'/// it probably means that the security settings of the browser will need to be\r\n'
+'/// adjusted by the user or admin.\r\n'
+'///\r\n'
+'\r\n'
+'function W3CCheckThatWeCanFetchXMLFromDisk()\r\n'
+'{\r\n'
+'    var uri = \'../../\' + icuName + \'/C3ICU.xml\';\r\n'
+'\r\n'
+'    try\r\n'
+'    {\r\n'
+'        var doc = null;\r\n'
+'\r\n'
+'        //Wc3 DOM\r\n'
+'        if (document.implementation.createDocument)\r\n'
+'            doc = document.implementation.createDocument("", "", null);\r\n'
+'\r\n'
+'        if (doc != null)\r\n'
+'        {\r\n'
+'            try\r\n'
+'            {\r\n'
+'                doc.async = false;\r\n'
+'                doc.load(uri);\r\n'
+'            }\r\n'
+'            catch (e) //SAFARI DOM\r\n'
+'            {\r\n'
+'                try\r\n'
+'                {\r\n'
+'                    var req = new XMLHttpRequest();\r\n'
+'\r\n'
+'                    req.open("GET", uri, argAsync=false);\r\n'
+'\r\n'
+'                    req.send("");\r\n'
+'\r\n'
+'                    doc = new DOMParser().parseFromString( \'<xml/>\', \'application/xml\');\r\n'
+'                    doc = doc.loadXML( req.responseText);\r\n'
+'                }\r\n'
+'                catch (e)\r\n'
+'                {\r\n'
+'                    throw(e);\r\n'
+'                }\r\n'
+'            }\r\n'
+'        }\r\n'
+'    }\r\n'
+'    catch (e)\r\n'
+'    {\r\n'
+'        var browser  = \'This web browser\\\'s\';\r\n'
+'        var settings = \'\';\r\n'
+'\r\n'
+'        var messageWrapper = \r\n'
+'               \'javascript:"\' +\r\n'
+'               \'<html>\' +\r\n'
+'                 \'<head>\' +\r\n'
+'                   \'<title>C3 Courseware Runtime Reports</title>\' +\r\n'
+'                   \'<style>td {font: 14pt sans-serif}</style>\' +\r\n'
+'                 \'<head>\' +\r\n'
+'                 \'<body>\' +\r\n'
+'                   \'<table width=100% height=100%>\' +\r\n'
+'                     \'<tr>\' +\r\n'
+'                       \'<td align=center>\' +\r\n'
+'                         \'$BROWSER$ security is currently too strict to allow this courseware to run.\' +\r\n'
+'                         \'<p>\' +\r\n'
+'                         \'Please ask your IT administrator set this browser\\\'s advanced settings:\' +\r\n'
+'                         \'<p>\' +                         \r\n'
+'                         \'$SETTINGS$\' + \r\n'
+'                         \'<p>\' +\r\n'
+'                         \'(The test performed was that of fetching an XML document.)\' +\r\n'
+'                       \'</td>\' +\r\n'
+'                     \'</tr>\' +\r\n'
+'                   \'</table>\' +\r\n'
+'                 \'</body>\' +\r\n'
+'               \'</html>\' +\r\n'
+'               \'"\';\r\n'
+'\r\n'
+'\r\n'
+'        if (String(e).indexOf(\'code: "1012"\') >= 0)\r\n'
+'        {   \r\n'
+'            browser  = \'FireFox browser\';   \r\n'
+'            settings = \r\n'
+'                \'<b>security.fileuri.strict_origin_policy</b> to <b>false</b>.\' + \r\n'
+'                \'<p>\' +\r\n'
+'                \'<b>dom.allow_scripts_to_close_windows</b> to <b>true</b>.\';\r\n'
+'        }\r\n'
+'\r\n'
+'\r\n'
+'        if (String(e).indexOf(\'XMLHttpRequest Exception 101\') >= 0)\r\n'
+'        {   \r\n'
+'            browser  = \'Chrome browser\';   \r\n'
+'            settings = \r\n'
+'                \'Please add the following command line options to Chrome:\' +\r\n'
+'                \'<p>\' +\r\n'
+'                \'<b>--allow-allow-file-access-from-files</b>\' +\r\n'
+'                \'<p>\' +\r\n'
+'                \'<b>--always-authorize-plugins</b>\'       \r\n'
+'        }\r\n'
+'\r\n'
+'        window.location.href = messageWrapper.replace(\'$BROWSER$\', browser).replace(\'$SETTINGS$\', settings);    \r\n'
+'    }   \r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'///\r\n'
+'/// IE/Wc3: Returns true if it\'s possible to create an ActiveX object.\r\n'
+'///         This is a quick way to test that the browser is IE\r\n'
+'\r\n'
+'function C3HasActiveXObject()\r\n'
+'{\r\n'
+'    return (typeof(ActiveXObject) != \'undefined\');\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'///\r\n'
+'/// IE/Wc3: Returns the xml of a node or document.\r\n'
+'///\r\n'
+'\r\n'
+'function C3GetOuterXML(obj)\r\n'
+'{\r\n'
+'    try\r\n'
+'    {\r\n'
+'        //Wc3 DOM\r\n'
+'        if (obj.outerXML)\r\n'
+'            return obj.outerXML();\r\n'
+'\r\n'
+'        //IE DOM\r\n'
+'        if (obj.xml)\r\n'
+'            return obj.xml;\r\n'
+'    }\r\n'
+'    catch (e)\r\n'
+'    {\r\n'
+'        C3ReportError(\'ICU\\\'s index.html\', \'C3GetXML\', e, \'failed\');\r\n'
+'    }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'///\r\n'
+'/// IE/Wc3: Report an error to the end-user\r\n'
+'///\r\n'
+'\r\n'
+'function C3ReportError( fileName, functionName, errObj, messageText)\r\n'
+'{\r\n'
+'    var txt = \'C3 Runtime Error: \' + fileName + \'  \' + functionName + \'()\\n\\n\';\r\n'
+'\r\n'
+'    if (errObj == null || errObj == undefined)\r\n'
+'        txt += messageText;\r\n'
+'    else\r\n'
+'    //IE DOM\r\n'
+'    if (errObj.description)\r\n'
+'        txt += errObj.description + \'\\n\\n\' + messageText;\r\n'
+'    //Wc3 DOM\r\n'
+'    else\r\n'
+'        txt += errObj + \'\\n\\n\' + messageText;\r\n'
+'\r\n'
+'    alert(txt);   \r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'///\r\n'
+'/// Add various features to the DOM...\r\n'
+'///\r\n'
+'\r\n'
+'///\r\n'
+'/// Add selectNodes() and selectSingleNode() methods to W3C DOM\r\n'
+'///\r\n'
+'\r\n'
+'if( document.implementation.hasFeature("XPath", "3.0") ) \r\n'
+'{\r\n'
+'    XMLDocument.prototype.loadXML = function(xString)\r\n'
+'    {\r\n'
+'        if (window.DOMParser != undefined)\r\n'
+'        {\r\n'
+'            var doc = new DOMParser().parseFromString( xString, \'application/xml\');\r\n'
+'\r\n'
+'            if (doc.documentElement.namespaceURI ===\r\n'
+'                \'http://www.mozilla.org/newlayout/xml/parsererror.xml\' &&\r\n'
+'                doc.documentElement.tagName === \'parsererror\')\r\n'
+'            {\r\n'
+'                this.parseError = new Object();\r\n'
+'                this.parseError.errorCode = -1; //set this to something reasonable\r\n'
+'                this.parseError.reason    = doc.documentElement.firstChild.nodeValue;\r\n'
+'\r\n'
+'                var xml = C3GetOuterXML(doc).replace(/\\r|\\n/g,\' \');\r\n'
+'\r\n'
+'                var errorDescription = doc.documentElement.firstChild.nodeValue;\r\n'
+'\r\n'
+'                var srcText = xml.replace(/^.*?<sourcetext>(.*?)<.*$/,\'$1\'\r\n'
+'                                ).replace(\'&lt;\', \'<\'\r\n'
+'                                ).replace(\'&gt;\', \'>\'\r\n'
+'                                ).replace(\'&amp;\', \'&\');\r\n'
+' \r\n'
+'                var line    = xml.replace(/^.*? Line Number (\\d+),.*$/, \'$1\');\r\n'
+'                var linepos = xml.replace(/^.*?, Column (\\d+):.*$/, \'$1\');\r\n'
+'\r\n'
+'                var filepos = 0;\r\n'
+'\r\n'
+'                if (xString.indexOf(\'\\r\') >= 0)\r\n'
+'                    try {filepos = xString.split(\'\\r\\n\').slice(0,line-2).join(\'\\r\\n\').length + linepos} catch (e) {}\r\n'
+'                else\r\n'
+'                    try {filepos = xString.split(\'\\n\'  ).slice(0,line-2).join(\'\\n\'  ).length + linepos} catch (e) {}\r\n'
+'\r\n'
+'                this.parseError.filepos = filepos;\r\n'
+'                this.parseError.linepos = linepos;\r\n'
+'                this.parseError.line    = line;\r\n'
+'                this.parseError.srcText = srcText;\r\n'
+'                this.parseError.url     = \'Loaded from string.\';\r\n'
+'\r\n'
+'                //alert(errorDescription + \'\\n\\n------\\n\\n\' + this.parseError.srcText + \'\\n\\nline: \' + this.parseError.line + \'\\n\\ncolumn: \' + this.parseError.linepos + \'\\n\\nfilepos: \' + filepos + \'\\n\\nxString length: \' + xString.length);\r\n'
+'\r\n'
+'                doc = null;               \r\n'
+'            }\r\n'
+'            else\r\n'
+'\r\n'
+'            return doc;\r\n'
+'        }\r\n'
+'    }\r\n'
+'\r\n'
+'\r\n'
+'    // selectNodes() - prototying the XMLDocument \r\n'
+'    XMLDocument.prototype.selectNodes = function(cXPathString, xNode) \r\n'
+'    { \r\n'
+'        if( !xNode ) { xNode = this; }\r\n'
+'\r\n'
+'        var oNSResolver = this.createNSResolver(this.documentElement) \r\n'
+'        var aItems      = this.evaluate(cXPathString, xNode, oNSResolver,\r\n'
+'                           XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null) \r\n'
+'        var aResult = [];\r\n'
+'\r\n'
+'        for( var i = 0; i < aItems.snapshotLength; i++)  \r\n'
+'            aResult[i] = aItems.snapshotItem(i);\r\n'
+'\r\n'
+'        return aResult;\r\n'
+'    } \r\n'
+'\r\n'
+'    // selectNodes() - prototying the Element \r\n'
+'    Element.prototype.selectNodes = function(cXPathString) \r\n'
+'    { \r\n'
+'        if(this.ownerDocument.selectNodes) \r\n'
+'            return this.ownerDocument.selectNodes(cXPathString, this);\r\n'
+'        else\r\n'
+'           throw "For XML Elements Only";\r\n'
+'    }\r\n'
+'\r\n'
+'\r\n'
+'    // selectSingleNode() - prototying the XMLDocument \r\n'
+'    XMLDocument.prototype.selectSingleNode = function(cXPathString, xNode) \r\n'
+'    { \r\n'
+'        if( !xNode ) { xNode = this; }\r\n'
+'\r\n'
+'        var xItems = this.selectNodes(cXPathString, xNode);\r\n'
+'\r\n'
+'        if( xItems.length > 0 ) \r\n'
+'        { \r\n'
+'            return xItems[0];\r\n'
+'        } \r\n'
+'        else \r\n'
+'        { \r\n'
+'            return null;\r\n'
+'        } \r\n'
+'    } \r\n'
+'\r\n'
+'    // selectSingleNode() - prototying the Element \r\n'
+'    Element.prototype.selectSingleNode = function(cXPathString) \r\n'
+'    {\r\n'
+'        if(this.ownerDocument.selectSingleNode) \r\n'
+'        { \r\n'
+'            return this.ownerDocument.selectSingleNode(cXPathString, this);\r\n'
+'        } \r\n'
+'            else{throw "For XML Elements Only";} \r\n'
+'    }\r\n'
+'\r\n'
+'\r\n'
+'    // xml property - prototying the XMLDocument  \r\n'
+'\r\n'
+'    XMLDocument.prototype.outerXML = function()\r\n'
+'    {\r\n'
+'        return (new XMLSerializer()).serializeToString(this);\r\n'
+'    }\r\n'
+'\r\n'
+'\r\n'
+'    // xml property - prototying the Element  \r\n'
+'\r\n'
+'    Element.prototype.outerXML = function()\r\n'
+'    {\r\n'
+'        return (new XMLSerializer()).serializeToString(this);\r\n'
+'    }\r\n'
+'}\r\n'
+'\r\n'
+'</script>\r\n'
+'\r\n'
+'\r\n'
+'<script type="text/javascript">\r\n'
+'\r\n'
+'var loc = window.location.href.split(\'/\'); loc.pop(); var icuName = loc.pop();\r\n'
+'\r\n'
+'var search = window.location.search;\r\n'
+'\r\n'
+'document.title = unescape(icuName);\r\n'
+'\r\n'
+'var xml = C3LoadXMLDocument(\'C3ICU.xml\')\r\n'
+'\r\n'
+'var interface = xml.selectSingleNode(\'/ICU/@Interface\').value;\r\n'
+'\r\n'
+'var path = \'../Interfaces/\' + interface + \'/interface.html\';\r\n'
+'\r\n'
+'try\r\n'
+'{\r\n'
+'    if (search == "")\r\n'
+'        search =  "?";\r\n'
+'    else\r\n'
+'        search += "&";\r\n'
+'\r\n'
+'    search += "icuName=" + icuName;\r\n'
+'\r\n'
+'    window.location.href = path + search;\r\n'
+'}\r\n'
+'catch (e)\r\n'
+'{\r\n'
+'    alert(\r\n'
+'        \'The C3 Courseware Runtime reports that:\\n\\n\' +\r\n'
+'        \'The required interface \\\'\' + interface + \'\\\' could not be found!\\n\\n\' +\r\n'
+'        \'This ICU cannot open without it.\');\r\n'
+'}\r\n'
+'\r\n'
+'</script>'
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createHTML2 () {
  fs.writeFile( path.resolve(tmp, 'index.html'), 
 '<script language="javascript">\r\n'
+'\r\n'
+'var color            = \'#DDDDDD\';\r\n'
+'var backgroundColor  = \'#537ca2\';\r\n'
+'var highlightColor   = \'rgb(255,200,0)\';\r\n'
+'var activeColor      = \'white\';\r\n'
+'\r\n'
+'var splitWidth       = \'200\';\r\n'
+'\r\n'
+'var openedNow        = false;\r\n'
+'var flyEffect        = false;\r\n'
+'var effectStartDelay = 500;\r\n'
+'var effectStepDelay  = 1;\r\n'
+'\r\n'
+'/////////////////////////////////////////////////////////////////\r\n'
+'//\r\n'
+'// Pico LMS 2004: Launches courseware outlines in the SCORM\r\n'
+'// manifiest.\r\n'
+'//\r\n'
+'// Run this page from the same folder as the scorm manifest\r\n'
+'//\r\n'
+'// B.Blatchley, D.P. Associates (c)2005,2006,2007\r\n'
+'// bblatchley@dpatraining.com\r\n'
+'//\r\n'
+'/////////////////////////////////////////////////////////////////\r\n'
+'\r\n'
+'\r\n'
+'var currentICU    = undefined;\r\n'
+'var nextDirection = undefined;\r\n'
+'var lmsNavigated  = false;\r\n'
+'\r\n'
+'var writeNav = function()\r\n'
+'{\r\n'
+'   var o = \'\';\r\n'
+'\r\n'
+'   manif = GetLaunchDataFromSCORMMainifest(\'\');\r\n'
+'\r\n'
+'\r\n'
+'   o = ((((\r\n'
+'       \'<s\' + \'cript language="javascript">\\n\' +\r\n'
+'          \'function LightupSelectedICU(elm)\\n\' +\r\n'
+'          \'{\\n\' +\r\n'
+'          \'   setTimeout( function() { LightupSelectedICU_(elm) } , 20);\\n\' +\r\n'
+'          \'}\\n\' +\r\n'
+'          \'function LightupSelectedICU_( elm )\\n\' +\r\n'
+'          \'{\\n\' +\r\n'
+'          \'   var tds = document.getElementsByTagName(\\\'TD\\\');\\n\' +\r\n'
+'          \'   for (var i = 0; i < tds.length; i++)\\n\' +\r\n'
+'          \'   {\\n\' +\r\n'
+'          \'      if (tds[i].className == \\\'hi\\\' || tds[i].className == \\\'act\\\')\\n\' +\r\n'
+'          \'         tds[i].className = \\\'lo\\\';\\n\' +\r\n'
+'          \'   }\\n\' +\r\n'
+'          \'   elm.className = \\\'act\\\';\\n\' +\r\n'
+'          \'}\\n\' +\r\n'
+'       \'</s\' + \'cript>\\n\' +\r\n'
+'       \'<html>\' +\r\n'
+'         \'<head>\' +\r\n'
+'           \'<style>\' +\r\n'
+'             \'body   {background-color: _BCOLOR_;        color: _FCOLOR_;}\' +\r\n'
+'             \'td     {font: normal 10pt/13pt sans-serif; color: _FCOLOR_;}\' +\r\n'
+'             \'td.lo  {font: normal 10pt/13pt sans-serif; color: _FCOLOR_; cursor: hand;}\' +\r\n'
+'             \'td.hi  {font: normal 10pt/13pt sans-serif; color: _HCOLOR_; cursor: hand;}\' +\r\n'
+'             \'td.act {font: bold   10pt/13pt sans-serif; color: _ACOLOR_; cursor: hand;}\' +\r\n'
+'             \'td.hd  {font: italic 12pt/14pt sans-serif; color: _FCOLOR_; cursor: default;}\' +\r\n'
+'             \'td.ln  {font: 0/0 monospace; height:5;}\' +\r\n'
+'             \'.txt   {text-decoration: none; cursor: hand;}\' +\r\n'
+'           \'</style>\' +\r\n'
+'         \'</head>\' +\r\n'
+'         \'<body oncontextmenu="return false;" unselectable="on">\' +\r\n'
+'           \'<table id=navTable width=100% height=100% style="display:none"><tr><td align=center unselectable=on>\' +\r\n'
+'             \'<table unselectable=on>\' +\r\n'
+'               \'<tr>\' +\r\n'
+'                 \'<td class=hd unselectable=on>_MAINTITLE_</td>\' +\r\n'
+'               \'</tr>\'\r\n'
+'        ).replace(/_FCOLOR_/g, color)\r\n'
+'        ).replace(/_BCOLOR_/g, backgroundColor)\r\n'
+'        ).replace(/_ACOLOR_/g, activeColor)\r\n'
+'        ).replace(/_HCOLOR_/g, highlightColor);\r\n'
+'\r\n'
+'               for (var i = 0; i < manif.sco.length; i++)\r\n'
+'               {\r\n'
+'                  var s     = manif.sco[i];\r\n'
+'                  var fnc   = s.id.replace(/-/g,\'_\');\r\n'
+'                  var href  = s.href.replace(/\\\\/g,\'/\') + "?SCORMNAV=FLOW";\r\n'
+'                  var title = s.title;\r\n'
+'\r\n'
+'                  o += (((((\r\n'
+'                        \'<s\' + \'cript>\' +\r\n'
+'                        \'var f__FNC_ = function(lmsNav) \' +\r\n'
+'                        \'{\' +\r\n'
+'                        \'   lmsNav = (lmsNav == undefined ? true : lmsNav);\' +\r\n'
+'                        \'   parent.lmsNavigated = lmsNav;\' +\r\n'
+'                        \'   parent.currentICU = "f__FNC_";\' +\r\n'
+'                        \'   parent.content.name = "content";\' +\r\n'
+'                        \'   open("_PATH__HREF_","content","");\' +\r\n'
+'                        \'}\' +\r\n'
+'                        ((i == 0) ? \'\\r\\nsetTimeout( "f__FNC_(false)", 200);\' : \'\') +\r\n'
+'                        \'</s\' + \'cript>\\r\\n\' +\r\n'
+'                        \'<tr unselectable="on"><td class=ln unselectable="on">&nbsp;</td></tr>\\r\\n\' +\r\n'
+'                        \'<tr unselectable="on"><td class=_CLASS_ id="aChoice" unselectable="on" \' +\r\n'
+'                          \'onmouseover="if (this.className != \\\'act\\\') {this.className=\\\'hi\\\'}" onmouseout="if (this.className != \\\'act\\\') {this.className=\\\'lof\\\'}" \' +\r\n'
+'                          \'onclick="LightupSelectedICU(this); f__FNC_()" title="_TITLE_" \' +\r\n'
+'                        \'><span class=txt unselectable="on" \' +\r\n'
+'                          \'onclick="f__FNC_()" title="_TITLE_" \' +\r\n'
+'                        \'>_TITLE_\' +\r\n'
+'                        \'</span></td></tr>\\r\\n\'\r\n'
+'                       ).replace(/_FNC_/g,   fnc)\r\n'
+'                       ).replace(/_TITLE_/g, title)\r\n'
+'                       ).replace(/_PATH_/,   manif.path)\r\n'
+'                       ).replace(/_HREF_/,   href)\r\n'
+'                       ).replace(/_CLASS_/,  (i == 0 ? \'act\' : \'lo\'));\r\n'
+'               }\r\n'
+'\r\n'
+'   o +=      \'</table>\' +\r\n'
+'           \'</td></tr></table>\' +\r\n'
+'         \'</body>\' +\r\n'
+'       \'</html>\';\r\n'
+'\r\n'
+'   o = o.replace(/_MAINTITLE_/gm, manif.title);\r\n'
+'\r\n'
+'   frames[\'nav\'].document.write(o);\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function writeSplitter()\r\n'
+'{\r\n'
+'    var s = "";\r\n'
+'\r\n'
+'    s += "" +\r\n'
+'         "<" + "script id=\\"LIBRARY_SPLITTER\\" language=\\"jscript\\">\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "var opened = true;\\n" +\r\n'
+'         "var defaultOpenWidth = 250;\\n" +\r\n'
+'         "var openMessage      = \'Click here to open the TOC\';\\n" +\r\n'
+'         "var closeMessage     = \'Click here to close the TOC\';\\n" +\r\n'
+'         "var bgColor          = \'buttonface\';\\n" +\r\n'
+'         "var fgColor          = \'buttontext\';\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function Initialize() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   splitterTable.style.backgroundColor = bgColor;\\n" +\r\n'
+'         "   splitterTable.style.color           = fgColor;\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   buttonHole.style.borderTopColor    = fgColor;\\n" +\r\n'
+'         "   buttonHole.style.borderBottomColor = fgColor;\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   Button.style.backgroundColor = bgColor;\\n" +\r\n'
+'         "   Button.style.color           = fgColor;\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   Button.innerText = (opened == true ? \'3\' : \'4\');\t\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n";\r\n'
+'    s += "" +\r\n'
+'         "function Button_Click() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   var width;\\n" +\r\n'
+'         "status=\'click\' + new Date();\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   if(opened == false) {\\n" +\r\n'
+'         "      opened            = true;\\n" +\r\n'
+'         "      Button.innerText = \'4\';\\n" +\r\n'
+'         "      Button.title     = openMessage;\\n" +\r\n'
+'         "      width            = 0;\\n" +\r\n'
+'         "   }\\n" +\r\n'
+'         "   else \\n" +\r\n'
+'         "   {\\n" +\r\n'
+'         "      opened            = false;\\n" +\r\n'
+'         "      Button.innerText = \'3\';\t\\n" +\r\n'
+'         "      Button.title     = closeMessage;\\n" +\r\n'
+'         "      width            = defaultOpenWidth;\\n" +\r\n'
+'         "   }\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   parent.master.cols = \\"\\" + width + \\",7,*\\";\t\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "   event.cancelBubble = true;\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function Button_Over() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   Button.style.backgroundColor = fgColor;\\n";\r\n'
+'    s += "" +\r\n'
+'         "   Button.style.color           = bgColor;\\n" +\r\n'
+'         "   event.cancelBubble = true;\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function Button_Out() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   Button.style.backgroundColor = bgColor;\\n" +\r\n'
+'         "   Button.style.color           = fgColor;\\n" +\r\n'
+'         "   event.cancelBubble = true;\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "var Sizing = false;\\n" +\r\n'
+'         "var Sx     = 0;\\n" +\r\n'
+'         "var Wx     = 0;\\n" +\r\n'
+'         "var M      = 0;\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function StartSizing() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   Sizing = true;\\n";\r\n'
+'    s += "" +\r\n'
+'         "   GetSize();\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function ChangeSize() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   if( Sizing == true)\\n" +\r\n'
+'         "      Resize();\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function GetSize() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "  M  = parent.document.body.clientWidth - 100;\\n" +\r\n'
+'         "  Sx = event.screenX;\\n" +\r\n'
+'         "  Wx = parseInt(String(parent.master.cols).substring(0,String(parent.master.cols).lastIndexOf(\\",7\\")));\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function Resize() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "   var X = Wx + event.screenX - Sx;\\n" +\r\n'
+'         "\\n";\r\n'
+'    s += "" +\r\n'
+'         "   if(X <= 0) \\n" +\r\n'
+'         "   {\\n" +\r\n'
+'         "      T_COLS = \\"0,7,*\\";\\n" +\r\n'
+'         "      parent.splitter.Button.innerText = \'4\';\\n" +\r\n'
+'         "      parent.splitter.Button.title = openMessage;\\n" +\r\n'
+'         "      parent.splitter.opened        = true;\\n" +\r\n'
+'         "   }\t  \\n" +\r\n'
+'         "   else \\n" +\r\n'
+'         "   {\\n" +\r\n'
+'         "      T_COLS = (X > M ? M : X) + \\",7,*\\";\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "      parent.splitter.Button.innerText = \'3\';\\n" +\r\n'
+'         "      parent.splitter.Button.title     = closeMessage;\\n" +\r\n'
+'         "      parent.splitter.opened            = false;\t  \\n" +\r\n'
+'         "   }\\n" +\r\n'
+'         "   parent.master.cols =  T_COLS;\t\\n" +\r\n'
+'         "}\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "function StopSizing() \\n" +\r\n'
+'         "{\\n" +\r\n'
+'         "  Sizing = false;\\n" +\r\n'
+'         "}\\n";\r\n'
+'    s += "" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "</" + "script>\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "\\n" +\r\n'
+'         "<html>\\n" +\r\n'
+'         "  <head>\\n" +\r\n'
+'         "    <meta http-equiv=\\"Content-Type\\" content=\\"text/html; charset=iso-8859-1\\">\\n" +\r\n'
+'         "    <title></title> \\n" +\r\n'
+'         "    <style>\\n" +\r\n'
+'         "      body {\\n" +\r\n'
+'         "        margin:\t\t\t0px;\\n" +\r\n'
+'         "      }\\n" +\r\n'
+'         "      table {\\n" +\r\n'
+'         "        cursor:\t\t\tw-resize;\\n" +\r\n'
+'         "      }\\n" +\r\n'
+'         "      .button {\\n" +\r\n'
+'         "        width:\t\t\t7px;\\n" +\r\n'
+'         "        height:\t\t\t50px;\\n" +\r\n'
+'         "        cursor:\t\t\thand;\\n" +\r\n'
+'         "\tfont:\t\t\t9px webdings;\\n" +\r\n'
+'         "\tborder-top-width:\t1px;\\n" +\r\n'
+'         "        border-top-style:\tsolid;\\n";\r\n'
+'    s += "" +\r\n'
+'         "        border-bottom-width:\t1px;\\n" +\r\n'
+'         "        border-bottom-style:\tsolid;\\n" +\r\n'
+'         "        vertical-align:\t\tmiddle;\\n" +\r\n'
+'         "      }\\n" +\r\n'
+'         "    </style>\\n" +\r\n'
+'         "  </head>\\n" +\r\n'
+'         "  <body unselectable=\\"on\\" \\n" +\r\n'
+'         "    onMouseDown = \\"StartSizing()\\" \\n" +\r\n'
+'         "    onMouseMove = \\"ChangeSize()\\" \\n" +\r\n'
+'         "    onMouseUp   = \\"StopSizing()\\"\\n" +\r\n'
+'//         "    onLoad      = \\"Button_Click()\\"\\n" +\r\n'
+'         "  >\\n" +\r\n'
+'         "    <table id=\\"splitterTable\\" height=\\"100%\\" cellpadding=\\"0\\" cellspacing=\\"0\\" unselectable=\\"on\\">\\n" +\r\n'
+'         "      <tr unselectable=\\"on\\">\\n" +\r\n'
+'         "        <td unselectable=\\"on\\">\\n" +\r\n'
+'         "          <table id=\\"buttonHole\\" class=\\"button\\" cellpadding=\\"0\\" cellspacing=\\"0\\" unselectable=\\"on\\" " +\r\n'
+'         "            onClick = \\"Button_Click()\\"\\n" +\r\n'
+'         "          >\\n" +\r\n'
+'         "            <tr unselectable=\\"on\\">\\n" +\r\n'
+'         "              <td id=Button unselectable=\\"on\\"\\n" +\r\n'
+'         "                onMouseDown = \\"Button_Click()\\" \\n" +\r\n'
+'         "                onMouseOver = \\"Button_Over()\\" \\n" +\r\n'
+'         "                onMouseOut  = \\"Button_Out()\\"\\n" +\r\n'
+'         "                onMouseMove = \\"event.cancelBubble = true\\"\\n" +\r\n'
+'         "              >&nbsp;</td>\\n";\r\n'
+'    s += "" +\r\n'
+'         "            </tr>\\n" +\r\n'
+'         "          </table>\\n" +\r\n'
+'         "        </td>\\n" +\r\n'
+'         "      </tr>\\n" +\r\n'
+'         "    </table>\\n" +\r\n'
+'         "  </body>\\n" +\r\n'
+'         "</html>\\n";\r\n'
+'\r\n'
+'   frames[\'splitter\'].document.write(s.replace(/\\n$/,\'\'));\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'//\r\n'
+'// NULL SCORM API...\r\n'
+'//\r\n'
+'\r\n'
+'// SCORM 2004 API...\r\n'
+'\r\n'
+'var ADL_NAV_REQUEST = \'adl.nav.request\';\r\n'
+'\r\n'
+'var API_1484_11 = new Object();\r\n'
+'\r\n'
+'API_1484_11.Initialize       = function()              { return _Initialize(); }\r\n'
+'\r\n'
+'API_1484_11.Terminate        = function()              { return _Terminate(); }\r\n'
+'\r\n'
+'API_1484_11.GetValue         = function( name)         { return _GetValue(name); }\r\n'
+'\r\n'
+'API_1484_11.SetValue         = function( name, value)  { return _SetValue( name, value); }\r\n'
+'\r\n'
+'API_1484_11.Commit           = function()              { return _Commit();}\r\n'
+'\r\n'
+'API_1484_11.GetLastError     = function()              { return _GetLastError(); }\r\n'
+'\r\n'
+'API_1484_11.GetErrorString   = function( ErrorCodeNum) { return _GetErrorString( ErrorCodeNum ); }\r\n'
+'\r\n'
+'API_1484_11.GetDiagnostic    = function( ErrorCodeNum) { return _GetDiagnostic( ErrorCodeNum); }\r\n'
+'\r\n'
+'\r\n'
+'// SCORM 1.2.7 API...\r\n'
+'\r\n'
+'var API = new Object();\r\n'
+'\r\n'
+'API.LMSInitialize            = function()              { return _Initialize(); }\r\n'
+'\r\n'
+'API.LMSFinish                = function()              { return _Terminate(); }\r\n'
+'\r\n'
+'API.LMSGetValue              = function( name)         { return _GetValue(name); }\r\n'
+'\r\n'
+'API.LMSSetValue              = function( name, value)  { return _SetValue( name, value); }\r\n'
+'\r\n'
+'API.LMSCommit                = function()              { return _Commit(); }\r\n'
+'\r\n'
+'API.LMSGetLastError          = function()              { return _GetLastError(); }\r\n'
+'\r\n'
+'API.LMSGetErrorString        = function( ErrorCodeNum) { return _GetErrorString( ErrorCodeNum ); }\r\n'
+'\r\n'
+'API.LMSGetDiagnostic         = function( ErrorCodeNum) { return _GetDiagnostic( ErrorCodeNum); }\r\n'
+'\r\n'
+'\r\n'
+'// Common Null API -- do what you want here to simulate the LMS behavior!\r\n'
+'\r\n'
+'function _Initialize()                 { return true; }\r\n'
+'\r\n'
+'function _Terminate() \r\n'
+'{\r\n'
+'   if (lmsNavigated == true)\r\n'
+'   {\r\n'
+'      nextDirection = \'\';\r\n'
+'      lmsNavigated = false;\r\n'
+'   }\r\n'
+'\r\n'
+'   frames[\'content\'].location.href = \'javascript:"<body bgcolor=\' + backgroundColor + \'>"\'; \r\n'
+'   //alert(currentICU + "\\n\\n" + nextDirection);\r\n'
+'   NavigateToNextICU();\r\n'
+'   return true; \r\n'
+'}\r\n'
+'\r\n'
+'function _GetValue(name)               { return \'\'; }\r\n'
+'\r\n'
+'function _SetValue(name, value)\r\n'
+'{\r\n'
+'   if (name == ADL_NAV_REQUEST)\r\n'
+'      nextDirection = value;\r\n'
+'\r\n'
+'   return true; \r\n'
+'}\r\n'
+'\r\n'
+'function _Commit()                     { return true; }\r\n'
+'\r\n'
+'function _GetLastError()               { return \'\'; }\r\n'
+'\r\n'
+'function _GetErrorString(ErrorCodeNum) { return \'\'; }\r\n'
+'\r\n'
+'function _GetDiagnostic(ErrorCodeNum)  { return \'\'; }\r\n'
+'\r\n'
+'\r\n'
+'//\r\n'
+'// Read the SCORM manifest to get the launch data...\r\n'
+'//\r\n'
+'\r\n'
+'function GetLaunchDataFromSCORMMainifest(path)\r\n'
+'{\r\n'
+'   path = (path) ? path : \'\';\r\n'
+'\r\n'
+'   var out = new Object();\r\n'
+'\r\n'
+'   out.title = \'\';\r\n'
+'   out.path  = path;\r\n'
+'   out.sco   = new Array();\r\n'
+'\r\n'
+'   try \r\n'
+'   {\r\n'
+'      var xml = new ActiveXObject(\'MSXML.DOMDocument\');\r\n'
+'\r\n'
+'      xml.async = false;\r\n'
+'      xml.resolveExternals = false;\r\n'
+'      xml.load( path + \'imsmanifest.xml\');\r\n'
+'\r\n'
+'      out.title = xml.selectSingleNode(\'/manifest/organizations/organization/title\').text;\r\n'
+'\r\n'
+'      document.title = out.title;\r\n'
+'\r\n'
+'      var nodes = xml.selectNodes(\'//item\');\r\n'
+'\r\n'
+'      var nextItem = 0;\r\n'
+'\r\n'
+'      for (var i = 0; i < nodes.length; i++)\r\n'
+'      {\r\n'
+'         var title = nodes[i].selectSingleNode(\'title\').text;\r\n'
+'\r\n'
+'         var id    = nodes[i].getAttribute(\'identifier\');\r\n'
+'\r\n'
+'         var rnode = xml.selectSingleNode(\'//resource[@identifier=\\\'\' + id + \'\\\']\');\r\n'
+'\r\n'
+'         if (rnode == null)\r\n'
+'         {\r\n'
+'            id = nodes[i].getAttribute(\'identifierref\');\r\n'
+'\r\n'
+'            rnode = xml.selectSingleNode(\'//resource[@identifier=\\\'\' + id + \'\\\']\');\r\n'
+'         }\r\n'
+'\r\n'
+'         if (rnode == null)\r\n'
+'            continue;\r\n'
+'\r\n'
+'         out.sco[nextItem] = new Object();\r\n'
+'\r\n'
+'         out.sco[nextItem].id    = id;\r\n'
+'         out.sco[nextItem].title = title;\r\n'
+'         out.sco[nextItem].href  = rnode.getAttribute(\'href\');\r\n'
+'\r\n'
+'         nextItem++;\r\n'
+'      }\r\n'
+'   }\r\n'
+'   catch (e) {}\r\n'
+'\r\n'
+'   return out;\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function NavigateToNextICU()\r\n'
+'{\r\n'
+'   try\r\n'
+'   {\r\n'
+'      var i   = 0;\r\n'
+'      var icu = undefined;\r\n'
+'\r\n'
+'      for (; i < manif.sco.length; i++)\r\n'
+'      {\r\n'
+'         if (\'f_\' + manif.sco[i].id == currentICU)\r\n'
+'            break;\r\n'
+'      }\r\n'
+'\r\n'
+'      var fallback = manif.sco[0];\r\n'
+'\r\n'
+'      switch (nextDirection)\r\n'
+'      {\r\n'
+'         case \'continue\': i++;   break;\r\n'
+'         case \'previous\': i--;   break;\r\n'
+'         default:         i = i; break;\r\n'
+'      }\r\n'
+'\r\n'
+'      icu = manif.sco[i];\r\n'
+'\r\n'
+'      if (icu == undefined)\r\n'
+'      {\r\n'
+'         i   = 0;\r\n'
+'         icu = fallback;\r\n'
+'      }\r\n'
+'\r\n'
+'      if (icu != undefined)\r\n'
+'      {\r\n'
+'//         alert(\'Navigate to: \' + icu.id);\r\n'
+'\r\n'
+'         currentICU = "f_" + icu.id;\r\n'
+'         content.name = "content";\r\n'
+'\r\n'
+'         var href  = icu.href.replace(/\\\\/g,\'/\') + "?SCORMNAV=FLOW";\r\n'
+'\r\n'
+'         open(href,"content","");\r\n'
+'      }\r\n'
+'//      else\r\n'
+'//         alert(\'Cannot navigate!\');\r\n'
+'\r\n'
+'      LightupSelectedIC(i);\r\n'
+'   }\r\n'
+'   catch (e) {}\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function LightupSelectedIC( index )\r\n'
+'{\r\n'
+'   var tds = frames[\'nav\'].document.getElementsByTagName(\'TD\');\r\n'
+'\r\n'
+'   for (var i = 0; i < tds.length; i++)\r\n'
+'   {\r\n'
+'      if (tds[i].id == \'aChoice\')\r\n'
+'         tds[i].className = \'lo\';\r\n'
+'\r\n'
+'      tds[i].setAttribute(\'unselectable\',\'on\');\r\n'
+'   }\r\n'
+'\r\n'
+'\r\n'
+'   try\r\n'
+'   {\r\n'
+'      frames[\'nav\'].document.body.all.aChoice[index].className = \'act\'\r\n'
+'   }\r\n'
+'   catch (e)\r\n'
+'   {\r\n'
+'      frames[\'nav\'].document.body.all.aChoice.className = \'act\'\r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function FixFrameset()\r\n'
+'{\r\n'
+'   master.borderColor = backgroundColor;\r\n'
+'\r\n'
+'   if (openedNow == true)\r\n'
+'      FlyNavOpen();\r\n'
+'   else\r\n'
+'      frames[\'nav\'].document.getElementById(\'navTable\').style.display=\'block\';   \r\n'
+'\r\n'
+'   splitter.defaultOpenWidth = (splitWidth == 0 ? 200 : splitWidth);\r\n'
+'\r\n'
+'   splitter.opened  = openedNow;\r\n'
+'   splitter.state   = !openedNow;\r\n'
+'   splitter.bgColor = color;\r\n'
+'   splitter.fgColor = backgroundColor;\r\n'
+'\r\n'
+'   splitter.Initialize();\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'function FlyNavOpen()\r\n'
+'{\r\n'
+'   if (flyEffect)\r\n'
+'   {\r\n'
+'      var width = 1 * String(master.cols).split(\',\')[0];\r\n'
+'\r\n'
+'      if ( width < splitWidth )\r\n'
+'      {\r\n'
+'         master.cols = (width+10) + ",7,*";\r\n'
+'         setTimeout(FlyNavOpen, effectStepDelay);\r\n'
+'      }\r\n'
+'      else\r\n'
+'      {\r\n'
+'         frames[\'nav\'].document.getElementById(\'navTable\').style.display=\'block\';   \r\n'
+'      }\r\n'
+'   }\r\n'
+'   else\r\n'
+'   {\r\n'
+'      master.cols = splitWidth + ",7,*";\r\n'
+'      frames[\'nav\'].document.getElementById(\'navTable\').style.display=\'block\';   \r\n'
+'   }\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'function MakeUnselectable()\r\n'
+'{\r\n'
+'   MakeUnselectable_(frames[\'nav\']);\r\n'
+'   MakeUnselectable_(frames[\'splitter\']);\r\n'
+'}\r\n'
+'\r\n'
+'function MakeUnselectable_(win)\r\n'
+'{\r\n'
+'   var doc = win.document;\r\n'
+'\r\n'
+'   var all = doc.body.all;\r\n'
+'\r\n'
+'   for (var i = 0; i < all.length; ++i)\r\n'
+'   {\r\n'
+'      all[i].setAttribute(\'unselectable\', \'on\');\r\n'
+'   }\r\n'
+'\r\n'
+'   doc.body.setAttribute(\'unselectable\', \'on\');\r\n'
+'   doc.body.style.cursor = \'default\';\r\n'
+'}\r\n'
+'\r\n'
+'\r\n'
+'// LAUNCH!!!!\r\n'
+'\r\n'
+'setTimeout(writeNav,         1);\r\n'
+'setTimeout(writeSplitter,    1);\r\n'
+'setTimeout(MakeUnselectable, 5);\r\n'
+'\r\n'
+'setTimeout(FixFrameset, effectStartDelay);\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'\r\n'
+'</script>\r\n'
+'\r\n'
+'\r\n'
+'<html>\r\n'
+'  <head>\r\n'
+'    <title>Pico LMS</title>\r\n'
+'  </head>\r\n'
+'  <frameset name="master"  id="master" cols="0,7,*" frameborder="no" framespacing="0" border="0">\r\n'
+'    <frame name="nav"      id="nav"      src=\'javascript:"<body bgcolor=black>"\'  unselectable="on" scrolling="auto" noresize>\r\n'
+'    <frame name="splitter" id="splitter" frameborder="no" scrolling="no" unselectable="on" >\r\n'
+'    <frame name="content"  id="content"  src=\'javascript:"<body bgcolor=black>"\'  unselectable="on" scrolling="auto">\r\n'
+'  </frameset>\r\n'
+'\r\n'
+'</html>'
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createHTML3 () {
  fs.writeFile( path.resolve(tmp, 'Interfaces', 'empty_C3_interface', 'C3interface.html'),
  '' // empty file
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createHTML4 () {
  fs.writeFile( path.resolve(tmp, 'ICU_' + contentUuid, 'Media', 'interface.html'),
 '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\r\n'
+'<html xmlns="http://www.w3.org/1999/xhtml">\r\n'
+'<head>\r\n'
+'<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\r\n'
+'<title>Schneider</title>\r\n'
+'<style type="text/css">\r\n'
+'<!--\r\n'
+'body {\r\n'
+'\tmargin-left: 0px;\r\n'
+'\tmargin-top: 0px;\r\n'
+'\tmargin-right: 0px;\r\n'
+'\tmargin-bottom: 0px;\r\n'
+'\tbackground-color: #000000;\r\n'
+'\tcolor: #333333;\r\n'
+'}\r\n'
+'body,td,th {\r\n'
+'\tfont-family: Arial, Helvetica, sans-serif;\r\n'
+'}\r\n'
+'-->\r\n'
+'</style></head>\r\n'
+'<body onload="Loading()" onbeforeunload="SCO_ExitICU()" onresize="Size_Table()">\r\n'
+'<div style="position: absolute; left: 0px; top: 0px; width: 8px; height: 8px; z-index: 1; cursor: pointer; background-color: #222222;" onclick="Make_Scalable()" ondblclick="Show_Bookmark()">&nbsp;&nbsp;</div>\r\n'
+'<table id="MAIN" align="center" cellpadding="0" cellspacing="0" border="0" style="visibility: hidden"><tr><td width="784" height="389" align="center" valign="middle" id="maincontent">Loading...</td></tr></table>\r\n'
+'<div id="output" style="display: none; font-size:12px; position: absolute; z-index: 2; left: 10px; top: 0px; color:#333333"></div>\r\n'
+'</body>\r\n'
+'</html>\r\n'
+'<script src="All_Functions_1_2.js" type="text/javascript"></script>\r\n'
+'<script language="javascript">\r\n'
+'  var bookMarks = "currentFrame=1&highestFrame=1";\r\n'
+'  function Loading(){\r\n'
+'    Size_Table();\r\n'
+'    document.getElementById("MAIN").style.visibility = "visible";\r\n'
+'    SCO_LoadICU();\r\n'
+'\tsetTimeout("GetBookmarks()",1000);  \r\n'
+'  }\r\n'
+'  function GetBookmarks() {\r\n'
+'    var api = getAPIHandle();\r\n'
+'    if (api != null){\r\n'
+'\t  var BookMarks = SCO_GetBookmarkLocation();\r\n'
+'\t  if(BookMarks.indexOf(\'currentFrame\') != - 1)\r\n'
+'\t    bookMarks = BookMarks;\t  \r\n'
+'\t  bookMarks += "&api=1";\r\n'
+'\t  bookMarks += "&completed=" + doGetValue( CMI_COMPLETION_STATUS );  \r\n'
+'\t}\r\n'
+'    document.getElementById("output").innerHTML = bookMarks;\t\r\n'
+'\tdocument.getElementById("maincontent").innerHTML = \'<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0" width="100%" height="100%" align="middle" id="interface"> <param name="allowScriptAccess" value="always" /> <param name="movie" value="interface.swf" /> <param name="quality" value="high" /> <param name="bgcolor" value="#000000" /> <param name="FlashVars" value="\' + bookMarks + \'" /> <embed src="interface.swf" width="100%" height="100%" autostart="false" quality="high" bgcolor="#000000" FlashVars="\' + bookMarks + \'" name="interface" align="middle" allowScriptAccess="always" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" /> </object>\'; \r\n'
+'  }\r\n'
+'  function Size_Table() {\r\n'
+'    var H = 389;\r\n'
+'    if(navigator.appName.indexOf("Explorer") != -1) {\r\n'
+'\t  H = document.documentElement.clientHeight;\r\n'
+'    }\r\n'
+'    else {\r\n'
+'      H = window.innerHeight;\t  \r\n'
+'    }\t\r\n'
+'    document.getElementById("maincontent").style.height = H + "px";\r\n'
+'  }\r\n'
+'  function Make_Scalable(){ \r\n'
+'\tif(document.getElementById("maincontent").width.indexOf("784") != -1){\r\n'
+'\t  document.getElementById("MAIN").width = "99%";\r\n'
+'\t  document.getElementById("maincontent").width = "100%";\r\n'
+'\t}\r\n'
+'\telse{\r\n'
+'\t  document.getElementById("MAIN").width = "";\t\r\n'
+'\t  document.getElementById("maincontent").width = "784";\r\n'
+'\t}\r\n'
+'  }\r\n'
+'  function Show_Bookmark(){\r\n'
+'\tdocument.getElementById("output").style.display = "block";\t\r\n'
+'  }  \r\n'
+'  if(navigator.userAgent.indexOf("MSIE") == -1)\r\n'
+'    window.onbeforeunload = C3UnloadLesson();  \r\n'
+'</script>'
  , function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createDynamic1 () {
  var aggregationUuid = generateUuid();
  var out =  '<?xml version="1.0" encoding="utf-8"?>\r\n'
+'<manifest identifier="identifier" version="1.0" xmlns="http://www.imsproject.org/xsd/imscp_rootv1p1p2" xmlns:adlcp="http://www.adlnet.org/xsd/adlcp_rootv1p2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsproject.org/xsd/imscp_rootv1p1p2 imscp_rootv1p1p2.xsd http://www.imsglobal.org/xsd/imsmd_rootv1p2p1 imsmd_rootv1p2p1.xsd http://www.adlnet.org/xsd/adlcp_rootv1p2 adlcp_rootv1p2.xsd ">\r\n'
+'  <metadata>\r\n'
+'    <schema>ADL SCORM</schema>\r\n'
+'    <schemaversion>1.2</schemaversion>\r\n'
+'  </metadata>\r\n'
+'    <organizations default="C3Aggregation_' + aggregationUuid + '">\r\n'
+'    <organization identifier="C3Aggregation_' + aggregationUuid + '">\r\n'
+'      <title>' + courseTitle + '</title>\r\n'
+'      <item identifier="Item_0" identifierref="ICU_' + contentUuid + '" parameters="?SCORMNAV=FLOW&amp;FIRSTICU=TRUE">\r\n'
+'        <title>' + courseTitle + '</title>\r\n'
+'                      </item>\r\n'
+'          </organization>\r\n'
+'  </organizations>\r\n'
+'    <resources>\r\n'
+'    <resource identifier="OVERHEAD" type="webcontent" adlcp:scormtype="asset">\r\n'
+'      <file href="index.html" />\r\n'
+'      <file href="adlcp_rootv1p2.xsd" />\r\n'
+'      <file href="ims_xml.xsd" />\r\n'
+'      <file href="imscp_rootv1p1p2.xsd" />\r\n'
+'      <file href="imsmd_rootv1p2.xsd" />\r\n'
+'      <file href="imsmd_rootv1p2p1.xsd" />\r\n'
+'    </resource>\r\n'
+'    <resource identifier="INTERFACE_empty_C3_interface" type="webcontent" adlcp:scormtype="asset">\r\n'
+'      <file href="Interfaces/empty_C3_interface/C3interface.html" />\r\n'
+'      <file href="Interfaces/empty_C3_interface/interface.js" />\r\n'
+'      <!-- @todo why no Utils? -->\r\n'
+'    </resource>\r\n'
+'    <resource identifier="ICU_' + contentUuid + '" type="webcontent" adlcp:scormtype="sco" href="ICU_' + contentUuid + '/index.html?MODE=CAI">\r\n'
+'\r\n'
+'      <!-- Static -->\r\n'
+'      <file href="ICU_' + contentUuid + '/C3ICU.xml" />\r\n'
+'      <file href="ICU_' + contentUuid + '/index.html" />\r\n'
+'      <file href="ICU_' + contentUuid + '/Media/All_Functions_1_2.js" />\r\n'
+'      <file href="ICU_' + contentUuid + '/Media/interface.html" />\r\n'
+'      <file href="ICU_' + contentUuid + '/Media/welcome.png" />\r\n'
+'\r\n'
+'      <!-- Dynamic -->\r\n'
;

swfs.forEach( function (swf) {
  out += '      <file href="ICU_' + contentUuid + '/Media/' + swf + '" />\r\n';
});

uuids.forEach( function (uuid) {
  out += '      <file href="ICU_' + contentUuid + '/Data/' + uuid + '.xml" />\r\n';
});

  out += 
 '\r\n'
+'      <dependency identifierref="INTERFACE_empty_C3_interface" />\r\n'
+'      <dependency identifierref="OVERHEAD" />\r\n'
+'    </resource>\r\n'
+'  </resources>\r\n'
+'</manifest>'

  fs.writeFile( path.resolve(tmp, 'imsmanifest.xml'), out, function (e) { if(e){return err(e)} chain[step++]() });

});



chain.push(function createDynamic2 () {
  var out = ''
+'<ICU Identifier="' + contentUuid + '" Interface="empty_C3_interface" '
  +'PassingGrade="" AssessmentReporting="None" Title="1Q 2016 Sustainment" '
  +'UnvisitedFrames="" DevGroup="7475EF97-613A-4C52-A2B6-B3729E7E18C6" >\r\n'
+'\r\n'
+'  <Frames>\r\n'
+'\r\n'
+'    <!-- Static -->\r\n'
  out += '    <Frame Identifier="' + welcomePngUuid + '" Hidden="False" Graded="No" '
    +'Name="Welcome" Filename="' + welcomePngUuid + '.xml" DesignedBy="LST.dp464896" '
    +'DesignedAt="11/30/2015 9:49:21 AM" DesignedOn="ICECOMDEV01" '
    +'CompletionCriterion="" />\r\n'
+'\r\n'
+'    <!-- Dynamic -->\r\n'
;

uuids.forEach( function (uuid,i) {
  if ('interface.swf' == swfs[i]) return;
  var title = swfToTitle[ swfs[i] ];
  out += '    <Frame Identifier="' + uuid + '" Hidden="False" Graded="No" '
    +'Name="'+title+'" Filename="' + uuid + '.xml" DesignedBy="LST.dp464896" '
    +'DesignedAt="11/30/2015 9:49:21 AM" DesignedOn="ICECOMDEV01" '
    +'CompletionCriterion="" />\r\n'
});

  out += 
 '\r\n'
+'  </Frames>\r\n'
+'\r\n'
+'  <Assets>\r\n'
+'\r\n'
+'    <!-- Static -->\r\n'
+'    <Asset Type="js" Filename="All_Functions_1_2.js" />\r\n'
+'    <Asset Type="html" Filename="interface.html" />\r\n'
+'    <Asset Type="png" Filename="welcome.png" />\r\n'
+'\r\n'
+'    <!-- Dynamic -->\r\n'
;

swfs.forEach( function (swf) {
  out += '    <Asset Type="swf" Filename="' + swf + '" />\r\n'
});

  out += 
 '\r\n'
+'  </Assets>\r\n'
+'\r\n'
+'  <MediaPresentation X="" Y="" Height="" Width="" Knobs="" VerticalKnobs="" AudioOnly="" Border="" AskUser="" DisplayInSeparateWindow="" />\r\n'
+'</ICU>\r\n'

  fs.writeFile( path.resolve(tmp, 'ICU_' + contentUuid, 'C3ICU.xml'), out, function (e) { if(e){return err(e)} chain[step++]() });

});


//// Generate all ‘Data’ XMLs except for ‘welcome.png’. 
chain.push(function createDataXMLs () {
  var createTally = 1; // `1` not `0`, because ‘interface.swf’ does not need a frame
  uuids.forEach( function (uuid,i) {
    if ('interface.swf' == swfs[i]) return;
    var title = swfToTitle[ swfs[i] ];
    var out = 
 '<Frame xmlns:C3="http://www.dpatraining.com/C3Controls" Name="'+title+'" '
  +'Identifier="' + uuid +'" Hidden="False" BackgroundImage="" MediaClip="" >\r\n'
+'\r\n'
+'  <Head Display="none" ShowOnlyIf="" ShowOnlyIfNot="" >\r\n'
+'    <FrameText >\r\n'
+'TODO : Insert Frame Text Here    </FrameText>\r\n'
+'    <InstructionText >\r\n'
+'TODO : Insert Instruction Text Here    </InstructionText>\r\n'
+'    <Buttons >\r\n'
+'      <Button Name="BACK" State="Enabled" />\r\n'
+'      <Button Name="REFERENCE" State="Enabled" />\r\n'
+'      <Button Name="GLOSSARY" State="Enabled" />\r\n'
+'      <Button Name="MENU" State="Enabled" />\r\n'
+'      <Button Name="HELP" State="Enabled" />\r\n'
+'      <Button Name="MEDIA" State="Enabled" />\r\n'
+'      <Button Name="AUDIO" State="Enabled" />\r\n'
+'      <Button Name="EXIT" State="Enabled" />\r\n'
+'      <Button Name="NEXT" State="Enabled" />\r\n'
+'    </Buttons>\r\n'
+'  </Head>\r\n'
+'  <AddOns />\r\n'
+'  <Interactions Display="none" />\r\n'
+'  <Question Display="none" />\r\n'
+'  <References Display="none" >\r\n'
+'  </References>\r\n'
+'  <Content >\r\n'
+'    <C3:Media\r\n'
+'      accDescription=""\r\n'
+'      accKey=""\r\n'
+'      asset="' + swfs[i] + '"\r\n'
+'      class="C3MediaControl"\r\n'
+'      clickToFrame=""\r\n'
+'      clickToLink=""\r\n'
+'      docWriterDocId=""\r\n'
+'      docWriterId=""\r\n'
+'      docWriterRefreshable="False"\r\n'
+'      height="360px"\r\n'
+'      id="MEDIA_1"\r\n'
+'      knobs="False"\r\n'
+'      Left="0px"\r\n'
+'      locked="False"\r\n'
+'      lookLikeAButton="False"\r\n'
+'      mime="application/x-shockwave-flash"\r\n'
+'      mouseoverToFrame=""\r\n'
+'      runtimeAutoplay="True"\r\n'
+'      runtimeLoop="False"\r\n'
+'      runtimeName=""\r\n'
+'      shape="None"\r\n'
+'      smartGraphic=""\r\n'
+'      style="OVERFLOW: hidden; CURSOR: default; HEIGHT: 360px; WIDTH: 784px; '
  +'POSITION: absolute; LEFT: 0px; Z-INDEX: 1; TOP: 0px; BEHAVIOR: url(); '
  +'VISIBILITY: visible; BACKGROUND-COLOR: transparent"\r\n'
+'      template="C3:Media"\r\n'
+'      Top="0px"\r\n'
+'      whenClicked="False"\r\n'
+'      whenMouseDown="False"\r\n'
+'      whenMouseOut="False"\r\n'
+'      whenMouseOver="False"\r\n'
+'      whenMouseUp="False"\r\n'
+'      width="784px"\r\n'
+'      zIndex="1"\r\n'
+'      xmlns:C3="http://www.dpatraining.com/C3Controls"\r\n'
+'    ><C3:MediaText><![CDATA[<DIV>Design view<BR>FLASH Media: MEDIA_1<BR>'
  +'Asset: ' + swfs[i] + '</DIV>]]></C3:MediaText></C3:Media>\r\n'
+'          </Content>\r\n'
+'</Frame>\r\n'
+'\r\n'
    ;
    fs.writeFile(
        path.resolve(tmp, 'ICU_' + contentUuid, 'Data', uuid + '.xml')
      , out
      , function (e) {
          if (e) return err(e);
          if (++createTally == uuids.length) chain[step++]();
        }
    );
  });
});


//// Generate special XML for ‘welcome.png’. 
chain.push(function createWelcomeDataXML () {
  var out = 
 '<Frame xmlns:C3="http://www.dpatraining.com/C3Controls" Name="Welcome" '
  +'Identifier="' + welcomePngUuid +'" Hidden="False" BackgroundImage="" MediaClip="" >\r\n'
+'\r\n'
+'  <Head Display="none" ShowOnlyIf="" ShowOnlyIfNot="" >\r\n'
+'    <FrameText >\r\n'
+'TODO : Insert Frame Text Here    </FrameText>\r\n'
+'    <InstructionText >\r\n'
+'TODO : Insert Instruction Text Here    </InstructionText>\r\n'
+'    <Buttons >\r\n'
+'      <Button Name="BACK" State="Enabled" />\r\n'
+'      <Button Name="REFERENCE" State="Enabled" />\r\n'
+'      <Button Name="GLOSSARY" State="Enabled" />\r\n'
+'      <Button Name="MENU" State="Enabled" />\r\n'
+'      <Button Name="HELP" State="Enabled" />\r\n'
+'      <Button Name="MEDIA" State="Enabled" />\r\n'
+'      <Button Name="AUDIO" State="Enabled" />\r\n'
+'      <Button Name="EXIT" State="Enabled" />\r\n'
+'      <Button Name="NEXT" State="Enabled" />\r\n'
+'    </Buttons>\r\n'
+'  </Head>\r\n'
+'  <AddOns />\r\n'
+'  <Interactions Display="none" />\r\n'
+'  <Question Display="none" />\r\n'
+'  <References Display="none" >\r\n'
+'  </References>\r\n'
+'  <Content >\r\n'
+'    <C3:Media\r\n'
+'      accDescription=""\r\n'
+'      accKey=""\r\n'
+'      asset="welcome.png"\r\n'
+'      class="C3MediaControl"\r\n'
+'      clickToFrame=""\r\n'
+'      clickToLink=""\r\n'
+'      docWriterDocId=""\r\n'
+'      docWriterId=""\r\n'
+'      docWriterRefreshable="False"\r\n'
+'      height="360px"\r\n'
+'      id="MEDIA_1"\r\n'
+'      knobs="False"\r\n'
+'      Left="0px"\r\n'
+'      locked="False"\r\n'
+'      lookLikeAButton="False"\r\n'
+'      mime="image/png"\r\n'
+'      mouseoverToFrame=""\r\n'
+'      runtimeAutoplay="True"\r\n'
+'      runtimeLoop="False"\r\n'
+'      runtimeName=""\r\n'
+'      shape="None"\r\n'
+'      smartGraphic=""\r\n'
+'      style="OVERFLOW: hidden; CURSOR: default; HEIGHT: 360px; WIDTH: 784px; '
  +'POSITION: absolute; LEFT: 0px; Z-INDEX: 1; TOP: 0px; BEHAVIOR: url(); '
  +'VISIBILITY: visible; BACKGROUND-COLOR: transparent"\r\n'
+'      template="C3:Media"\r\n'
+'      Top="0px"\r\n'
+'      whenClicked="False"\r\n'
+'      whenMouseDown="False"\r\n'
+'      whenMouseOut="False"\r\n'
+'      whenMouseOver="False"\r\n'
+'      whenMouseUp="False"\r\n'
+'      width="784px"\r\n'
+'      zIndex="1"\r\n'
+'      xmlns:C3="http://www.dpatraining.com/C3Controls"\r\n'
+'    ><C3:MediaText><![CDATA[]]></C3:MediaText></C3:Media>\r\n'
+'          </Content>\r\n'
+'</Frame>\r\n'
+'\r\n'
;
  fs.writeFile(
      path.resolve(tmp, 'ICU_' + contentUuid, 'Data', welcomePngUuid + '.xml')
    , out
    , function (e) {
        if (e) return err(e);
        chain[step++]();
      }
  );
});


//// Copy welcome.png to ‘Media’. 
chain.push(function copyWelcomePng () {
  copyFile(
      path.resolve(__dirname, '..', 'SWFs', 'welcome.png')
    , path.resolve(tmp, 'ICU_' + contentUuid, 'Media', 'welcome.png')
    , function (e) {
        if (e) return err(e);
        chain[step++]();
      }
  );
});


//// Copy swfs to ‘Media’. 
chain.push(function copySwfs () {
  var copyTally = 0;
  swfs.forEach( function (swf) {
    copyFile(
        path.resolve(__dirname, '..', 'SWFs', swf)
      , path.resolve(tmp, 'ICU_' + contentUuid, 'Media', swf)
      , function (e) {
          if (e) return err(e);
          if (++copyTally == swfs.length) chain[step++]();
        }
    );
  });
});


// chain.push(function convertToTar () {
//   var inp = fs.createReadStream('input.txt')
//     , out = fs.createWriteStream('input.txt.gz');

//   inp.pipe(gzip).pipe(out);
//   chain[step++]();

// });


// chain.push(function convertToZip () {
//   var inp = fs.createReadStream('input.txt')
//     , out = fs.createWriteStream('input.txt.gz');

//   inp.pipe(gzip).pipe(out);
//   chain[step++]();

// });


/*
chain.push(function createHTML1 () {
  fs.writeFile(tmp + 'file.name',

  , function (e) { if(e){return err(e)} chain[step++]() });

});
*/


chain.push(function complete () {
  rmrf(           path.resolve(__dirname, '..', 'SCORM Package') );
  fs.mkdirSync(   path.resolve(__dirname, '..', 'SCORM Package') );
  fs.rename( tmp, path.resolve(__dirname, '..', 'SCORM Package', courseSlug + '_' + timeStamp), function (e) { if(e){return err(e)} log('complete!') });
});




//// Start running the chain. 
chain[step++]();
